{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "LoginController"
    },
    "designerId": "cb6d63bc-7299-4f2b-8412-a47aa15cd876",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "userName",
                "selector": "#userName"
            },
            "designerId": "6fa44050-33e5-4440-b60a-b8a7533ce5d6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "password",
                "selector": "#password"
            },
            "designerId": "6748c5e9-5f94-43c8-bc32-7384f29b4027"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#loginBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "doLogin",
                "implHandler": [
                    "/*",
                    "// loginBtn에 fireEvent()를 이용한 click 이벤트 실행 시 button 은 undefined로 넘어옴.",
                    "",
                    "var form = button.up('form'),\t\t\t\t// Login form",
                    "    formWindow = button.up('window'),\t\t// Login form window",
                    "    values = form.getValues();\t\t\t\t// Form values",
                    "*/",
                    "",
                    "var form = Ext.getCmp(\"loginForm\"),\t\t\t// Login form",
                    "    formWindow = Ext.getCmp('loginWindow'),\t// Login form window",
                    "    values = form.getValues();\t\t\t\t// Form values",
                    "",
                    "var me = this;",
                    "",
                    "var userName = this.getUserName(),",
                    "    password = this.getPassword();",
                    "",
                    "var userNameVal = userName.getValue(),",
                    "    passwordVal = password.getValue();",
                    "",
                    "// Success",
                    "var successCallback = function(resp, ops) {",
                    "",
                    "//     Ext.Msg.show({",
                    "//         title: \"Form Values\",",
                    "//         msg: \"userName : \" + form.getForm().findField('userName').getValue() + \"<br/>password : \" + form.getForm().findField('password').getValue(),",
                    "//         buttons: Ext.Msg.OK,",
                    "//         fn: function(choice) {",
                    "//         },",
                    "//         icon: Ext.Msg.INFO",
                    "//     });",
                    "",
                    "    // Close window",
                    "    formWindow.destroy();",
                    "    Ext.getCmp(\"peacockViewport\").layout.setActiveItem(1);",
                    "    me.getUserSplitBtn().setText(userNameVal);",
                    "",
                    "    var treeStore = Ext.create('Ext.data.TreeStore', {",
                    "        storeId: 'treeStore',",
                    "        root: {",
                    "            expanded: true,",
                    "            text: 'Server List',",
                    "            children: [",
                    "                {",
                    "                    text: '<b>Dashboard</b>',",
                    "                    id: 'MENU_01',",
                    "                    leaf: true,",
                    "                    iconCls: 'no-icon',",
                    "                    cls: 'parent-node last-children'",
                    "                },",
                    "                {",
                    "                    text: '<b>Server Management</b>',",
                    "                    id: 'MENU_02',",
                    "                    expanded: true,",
                    "                    iconCls: 'no-icon',",
                    "                    cls: 'parent-node',",
                    "                    children: [",
                    "                        {",
                    "                            text: 'Instances1',",
                    "                            id: 'MENU_02_01',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon'",
                    "                        },",
                    "                        {",
                    "                            text: 'Instances2',",
                    "                            id: 'MENU_02_02',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon'",
                    "                        },",
                    "                        {",
                    "                            text: 'Instances3',",
                    "                            id: 'MENU_02_03',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon',",
                    "                            cls: 'last-children'",
                    "                        }",
                    "                    ]",
                    "                },",
                    "                {",
                    "                    text: '<b>RHEV Manager</b>',",
                    "                    id: 'MENU_03',",
                    "                    expanded: true,",
                    "                    iconCls: 'no-icon',",
                    "                    cls: 'parent-node',",
                    "                    children: [",
                    "                        {",
                    "                            text: 'Virtual Machines',",
                    "                            id: 'MENU_03_01',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon'",
                    "                        },",
                    "                        {",
                    "                            text: 'Templates',",
                    "                            id: 'MENU_03_02',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon',",
                    "                            cls: 'last-children'",
                    "                        }",
                    "                    ]",
                    "                },",
                    "                {",
                    "                    text: '<b>Scaling</b>',",
                    "                    id: 'MENU_04',",
                    "                    expanded: true,",
                    "                    iconCls: 'no-icon',",
                    "                    cls: 'parent-node',",
                    "                    children: [",
                    "                        {",
                    "                            text: 'Auto Sacling',",
                    "                            id: 'MENU_04_01',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon'",
                    "                        },",
                    "                        {",
                    "                            text: 'Load Balancers',",
                    "                            id: 'MENU_04_02',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon',",
                    "                            cls: 'last-children'",
                    "                        }",
                    "                    ]",
                    "                },",
                    "                {",
                    "                    text: '<b>Etc</b>',",
                    "                    id: 'MENU_05',",
                    "                    expanded: true,",
                    "                    iconCls: 'no-icon',",
                    "                    cls: 'parent-node',",
                    "                    children: [",
                    "                        {",
                    "                            text: 'sub menu1',",
                    "                            id: 'MENU_05_01',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon'",
                    "                        },",
                    "                        {",
                    "                            text: 'sub menu2',",
                    "                            id: 'MENU_05_02',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon'",
                    "                        },",
                    "                        {",
                    "                            text: 'sub menu3',",
                    "                            id: 'MENU_05_03',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon'",
                    "                        },",
                    "                        {",
                    "                            text: 'sub menu4',",
                    "                            id: 'MENU_05_04',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon',",
                    "                            cls: 'last-children'",
                    "                        }",
                    "                    ]",
                    "                },",
                    "                {",
                    "                    text: '<b>System Configuration</b>',",
                    "                    id: 'MENU_99',",
                    "                    expanded: true,",
                    "                    iconCls: 'no-icon',",
                    "                    cls: 'parent-node',",
                    "                    children: [",
                    "                        {",
                    "                            text: 'Menu Management',",
                    "                            id: 'MENU_99_01',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon'",
                    "                        },",
                    "                        {",
                    "                            text: 'Group Mamagement',",
                    "                            id: 'MENU_99_02',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon'",
                    "                        },",
                    "                        {",
                    "                            text: 'User Management',",
                    "                            id: 'MENU_99_03',",
                    "                            leaf: true,",
                    "                            iconCls: 'no-icon',",
                    "                            cls: 'last-children'",
                    "                        }",
                    "                    ]",
                    "                }",
                    "            ]",
                    "        },",
                    "        fields: [",
                    "            {",
                    "                name: 'text'",
                    "            }",
                    "        ]",
                    "    });",
                    "",
                    "",
                    "/*",
                    "    Ext.getCmp(\"menuPanel\").remove(Ext.getCmp(\"menuTreePanel\"));",
                    "",
                    "    var menuTreePanel = Ext.create('Ext.tree.Panel', {",
                    "        flex: 1,",
                    "        id: 'menuTreePanel',",
                    "        itemId: 'menuTreePanel',",
                    "        autoScroll: true,",
                    "        store: menuTreeStore,",
                    "        rootVisible: false,",
                    "        useArrows: true,",
                    "        viewConfig: {",
                    "            autoScroll: true,",
                    "            preserveScrollOnRefresh: true",
                    "        }",
                    "    });",
                    "",
                    "",
                    "    Ext.getCmp(\"menuPanel\").add(menuTreePanel);",
                    "*/",
                    "",
                    "    var menuTreeStore = Ext.getStore(\"MenuTreeStore\");",
                    "",
                    "    // show settings menu when logged in as admin",
                    "    if (userNameVal !== \"admin\") {",
                    "        Ext.getCmp(\"adminMenuSeparator\").hide();",
                    "        Ext.getCmp(\"adminMenu\").hide();",
                    "",
                    "        var rootNode = treeStore.getRootNode();",
                    "        rootNode.lastChild.remove();",
                    "        menuTreeStore.setRootNode(rootNode);",
                    "    } else {",
                    "        menuTreeStore.setRootNode(treeStore.getRootNode());",
                    "    }",
                    "",
                    "    Ext.getCmp(\"menuTreeView\").selModel.select(0);",
                    "    Ext.getCmp(\"menuTreeView\").fireEvent('cellclick', Ext.getCmp(\"menuTreeView\"), null, null, menuTreeStore.getRootNode().firstChild);",
                    "};",
                    "",
                    "// Failure",
                    "var failureCallback = function(resp, ops) {",
                    "",
                    "    // Show login failure error",
                    "    Ext.Msg.alert({",
                    "        title: \"Login Failure\",",
                    "        msg: resp,",
                    "        buttons: Ext.Msg.OK,",
                    "        fn: function(choice) {",
                    "            password.setValue(\"\");",
                    "            password.focus();",
                    "        },",
                    "        icon: Ext.Msg.ERROR",
                    "    });",
                    "};",
                    "",
                    "if (userNameVal === \"\") {",
                    "",
                    "    // username must not be null.",
                    "    Ext.Msg.show({",
                    "        title: \"Message\",",
                    "        msg: \"사용자아이디를 입력해주세요.\",",
                    "        buttons: Ext.Msg.OK,",
                    "        fn: function(choice) {",
                    "            userName.focus();",
                    "        },",
                    "        icon: Ext.Msg.WARNING",
                    "    });",
                    "} else if (passwordVal === \"\") {",
                    "",
                    "    // password must not be null.",
                    "    Ext.Msg.show({",
                    "        title: \"Message\",",
                    "        msg: \"비밀번호를 입력해주세요.\",",
                    "        buttons: Ext.Msg.OK,",
                    "        fn: function(choice) {",
                    "            password.focus();",
                    "        },",
                    "        icon: Ext.Msg.WARNING",
                    "    });",
                    "} else {",
                    "",
                    "    /*",
                    "    //TODO: Login using server-side authentication service",
                    "    Ext.Ajax.request({",
                    "        url: \"/login\",",
                    "        params: values,",
                    "        success: successCallback,",
                    "        failure: failureCallback",
                    "    });",
                    "    */",
                    "",
                    "    // Just run success for now",
                    "    successCallback();",
                    "",
                    "    // Just run failure for now",
                    "    //failureCallback(\"Not implemented yet.\");",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "cc02ed19-32ba-450c-ac69-e695d2c8f82d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#password",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "detectPasswordSpecialkey",
                "implHandler": [
                    "/*",
                    "component.getEl().on('keypress', function(e) {",
                    "    if (e.getKey() == e.ENTER) {",
                    "        Ext.getCmp(\"loginBtn\").fireEvent(\"click\");",
                    "    }",
                    "});",
                    "*/",
                    "",
                    "if (e.getKey() == e.ENTER) {",
                    "    this.doLogin();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "designerId": "8980df15-95a0-4ef2-ad1b-274d10a00154"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userName",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "detectUsernameSpecialkey",
                "implHandler": [
                    "/*",
                    "component.getEl().on('keypress', function(e) {",
                    "    if (e.getKey() == e.ENTER) {",
                    "        Ext.getCmp(\"loginBtn\").fireEvent(\"click\");",
                    "    }",
                    "});",
                    "*/",
                    "",
                    "if (e.getKey() == e.ENTER) {",
                    "    this.doLogin();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "designerId": "abcf2399-2bd5-4230-bf1f-5a17cde6a322"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "passwdResetLabel",
                "selector": "#passwdResetLabel"
            },
            "designerId": "cadf0317-5cb8-4d92-93e3-8f1a915dfb4a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#topLoginBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "popupLoginWindow",
                "implHandler": [
                    "// Create new login form window",
                    "var login = Ext.create(\"widget.loginWindow\");",
                    "",
                    "// Show window",
                    "login.show();",
                    "",
                    "this.getUserName().focus();",
                    "",
                    "/**",
                    " * 비밀번호 재설정 Label click event를 catch 하도록 설정",
                    " */",
                    "this.getPasswdResetLabel().getEl().on('click', function() {",
                    "    Ext.Msg.show({",
                    "        title: \"Message\",",
                    "        msg: \"Password reset funtion isn't implemented yet.\",",
                    "        buttons: Ext.Msg.OK,",
                    "        fn: function(choice) {",
                    "            // do nothing.",
                    "        },",
                    "        icon: Ext.Msg.QUESTION",
                    "    });",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "1401f34e-1ed8-492f-9b6a-6a2e7718374f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "userSplitBtn",
                "selector": "#userSplitBtn"
            },
            "designerId": "2cd3c08d-05f2-4f51-b1e7-6f2c5de71c37"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#editProfileMenu",
                "designer|targetType": "Ext.menu.Item",
                "fn": "doEditProfile",
                "implHandler": [
                    "Ext.Msg.show({",
                    "    title: \"Message\",",
                    "    msg: \"Edit Profile funtion isn't implemented yet.\",",
                    "    buttons: Ext.Msg.OK,",
                    "    fn: function(choice) {",
                    "        // do nothing.",
                    "    },",
                    "    icon: Ext.Msg.QUESTION",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "e043d60c-05fa-478d-a193-8ee4d0b45404"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#logoutMenu",
                "designer|targetType": "Ext.menu.Item",
                "fn": "doLogout",
                "implHandler": [
                    "Ext.getCmp(\"centerContainer\").layout.setActiveItem(0);",
                    "Ext.getCmp(\"peacockViewport\").layout.setActiveItem(0);"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "98f09776-ebd7-40e6-9bb8-b7474f4de438"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#adminMenu",
                "designer|targetType": "Ext.menu.Item",
                "fn": "doSettings",
                "implHandler": [
                    "Ext.getCmp(\"centerContainer\").layout.setActiveItem(1);"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "90e0eccc-9208-402e-86af-79cc5a032f93"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#introPanel",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "introPanelActivate",
                "implHandler": [
                    "// Create new login form window",
                    "var login = Ext.create(\"widget.loginWindow\");",
                    "",
                    "// Show window",
                    "login.show();",
                    "",
                    "this.getUserName().focus();",
                    "",
                    "/**",
                    " * 비밀번호 재설정 Label click event를 catch 하도록 설정",
                    " */",
                    "this.getPasswdResetLabel().getEl().on('click', function() {",
                    "    Ext.Msg.show({",
                    "        title: \"Message\",",
                    "        msg: \"Password reset funtion isn't implemented yet.\",",
                    "        buttons: Ext.Msg.OK,",
                    "        fn: function(choice) {",
                    "            // do nothing.",
                    "        },",
                    "        icon: Ext.Msg.QUESTION",
                    "    });",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "designerId": "b771ff06-dbc7-4051-8a60-a8f9dca4b72e"
        }
    ]
}