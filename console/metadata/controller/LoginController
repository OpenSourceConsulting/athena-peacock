{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "LoginController"
    },
    "designerId": "cb6d63bc-7299-4f2b-8412-a47aa15cd876",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "userName",
                "selector": "#userName"
            },
            "designerId": "6fa44050-33e5-4440-b60a-b8a7533ce5d6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "password",
                "selector": "#password"
            },
            "designerId": "6748c5e9-5f94-43c8-bc32-7384f29b4027"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#loginBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "doLogin",
                "implHandler": [
                    "",
                    "var form = Ext.getCmp(\"loginForm\"),\t\t\t// Login form",
                    "    formWindow = Ext.getCmp('loginWindow'),\t// Login form window",
                    "    values = form.getValues();\t\t\t\t// Form values",
                    "",
                    "if (form.getForm().isValid() !== true) {",
                    "    Ext.MessageBox.alert('알림', '유효하지 않은 입력값이 존재합니다.');",
                    "    return;",
                    "}",
                    "",
                    "var me = this;",
                    "",
                    "var userName = this.getUserName(),",
                    "    password = this.getPassword();",
                    "",
                    "var userNameVal = userName.getValue(),",
                    "    passwordVal = password.getValue();",
                    "",
                    "",
                    "// Success",
                    "var successCallback = function(resp, ops) {",
                    "",
                    "    var response = Ext.decode(resp.responseText);",
                    "    if(response.success){",
                    "        me.successfulLogin(response.data, \"json\");",
                    "    }",
                    "    else {",
                    "        failureCallback(response, ops);",
                    "    }",
                    "",
                    "};",
                    "",
                    "",
                    "// Failure",
                    "var failureCallback = function(resp, ops) {",
                    "",
                    "    var msg = \"로그인에 실패하였습니다.\";",
                    "    if(resp.msg !== null) {",
                    "        msg = resp.msg;",
                    "    }",
                    "    // Show login failure error",
                    "    Ext.Msg.alert({",
                    "        title: \"Login Failure\",",
                    "        msg: msg,",
                    "        buttons: Ext.Msg.OK,",
                    "        fn: function(choice) {",
                    "            password.setValue(\"\");",
                    "            password.focus();",
                    "        },",
                    "        icon: Ext.Msg.ERROR",
                    "    });",
                    "};",
                    "",
                    "if (userNameVal === \"\") {",
                    "",
                    "    // username must not be null.",
                    "    Ext.Msg.show({",
                    "        title: \"Message\",",
                    "        msg: \"사용자아이디를 입력해주세요.\",",
                    "        buttons: Ext.Msg.OK,",
                    "        fn: function(choice) {",
                    "            userName.focus();",
                    "        },",
                    "        icon: Ext.Msg.WARNING",
                    "    });",
                    "} else if (passwordVal === \"\") {",
                    "",
                    "    // password must not be null.",
                    "    Ext.Msg.show({",
                    "        title: \"Message\",",
                    "        msg: \"비밀번호를 입력해주세요.\",",
                    "        buttons: Ext.Msg.OK,",
                    "        fn: function(choice) {",
                    "            password.focus();",
                    "        },",
                    "        icon: Ext.Msg.WARNING",
                    "    });",
                    "} else {",
                    "",
                    "    //TODO: Login using server-side authentication service",
                    "    Ext.Ajax.request({",
                    "        url: GLOBAL.urlPrefix + \"user/login\",",
                    "        params: values,",
                    "        success: successCallback,",
                    "        failure: failureCallback",
                    "    });",
                    "",
                    "",
                    "/*",
                    "    var response = {",
                    "        'userId': 'admin',",
                    "        'loginId': 'admin',",
                    "        'userName': 'admin',",
                    "        'deptName': 'admin',",
                    "        'email': 'email',",
                    "        'lastLogon'\t: '2015.10.08 10:37:55',",
                    "        'authorities' : {'authority': 'ROLE_ADMIN'}",
                    "    };",
                    "    me.successfulLogin(response, \"json\");",
                    "*/",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "cc02ed19-32ba-450c-ac69-e695d2c8f82d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#password",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "detectPasswordSpecialkey",
                "implHandler": [
                    "",
                    "if (e.getKey() == e.ENTER) {",
                    "    this.doLogin();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "designerId": "8980df15-95a0-4ef2-ad1b-274d10a00154"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userName",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "detectUsernameSpecialkey",
                "implHandler": [
                    "",
                    "if (e.getKey() == e.ENTER) {",
                    "    this.doLogin();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "designerId": "abcf2399-2bd5-4230-bf1f-5a17cde6a322"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "passwdResetLabel",
                "selector": "#passwdResetLabel"
            },
            "designerId": "cadf0317-5cb8-4d92-93e3-8f1a915dfb4a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#topLoginBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "popupLoginWindow",
                "implHandler": [
                    "var login = Ext.create(\"widget.loginWindow\");",
                    "",
                    "// Show window",
                    "login.show();",
                    "",
                    "this.getUserName().focus();",
                    "",
                    "/**",
                    "  * 비밀번호 재설정 Label click event를 catch 하도록 설정",
                    "  */",
                    "this.getPasswdResetLabel().getEl().on('click', function() {",
                    "    Ext.Msg.show({",
                    "        title: \"Message\",",
                    "        msg: \"Password reset funtion isn't implemented yet.\",",
                    "        buttons: Ext.Msg.OK,",
                    "        fn: function(choice) {",
                    "            // do nothing.",
                    "        },",
                    "        icon: Ext.Msg.QUESTION",
                    "    });",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "1401f34e-1ed8-492f-9b6a-6a2e7718374f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "userSplitBtn",
                "selector": "#userSplitBtn"
            },
            "designerId": "2cd3c08d-05f2-4f51-b1e7-6f2c5de71c37"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#editProfileMenu",
                "designer|targetType": "Ext.menu.Item",
                "fn": "doEditProfile",
                "implHandler": [
                    "",
                    "/* Edit My Account */",
                    "var sessionInfo = Ext.getStore('SessionStore');",
                    "",
                    "userConstants.me.showUserWindow('myAccount', sessionInfo.getAt(0).get(\"userId\"));"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "e043d60c-05fa-478d-a193-8ee4d0b45404"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#logoutMenu",
                "designer|targetType": "Ext.menu.Item",
                "fn": "doLogout",
                "implHandler": [
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + 'user/logout',",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "",
                    "        var sessionInfo = Ext.getStore('SessionStore');",
                    "        sessionInfo.removeAll();",
                    "        sessionInfo.sync();",
                    "",
                    "        window.location.reload();",
                    "",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "98f09776-ebd7-40e6-9bb8-b7474f4de438"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#adminMenu",
                "designer|targetType": "Ext.menu.Item",
                "fn": "doSettings",
                "implHandler": [
                    "Ext.getCmp(\"centerContainer\").layout.setActiveItem(1);"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "90e0eccc-9208-402e-86af-79cc5a032f93"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#introPanel",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "introPanelActivate",
                "implHandler": [
                    "//Login Session Check",
                    "var sessionInfo = Ext.getStore('SessionStore');",
                    "sessionInfo.load();",
                    "",
                    "if(null != sessionInfo.getAt(0)){",
                    "    this.successfulLogin(sessionInfo.getAt(0), \"model\");",
                    "",
                    "} else {",
                    "",
                    "    // Create new login form window",
                    "    var login = Ext.create(\"widget.loginWindow\");",
                    "",
                    "    // Show window",
                    "    login.show();",
                    "",
                    "    this.getUserName().focus();",
                    "",
                    "}",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "designerId": "b771ff06-dbc7-4051-8a60-a8f9dca4b72e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "session",
                    "ops"
                ],
                "fn": "successfulLogin",
                "implHandler": [
                    "",
                    "//Login Session 설정",
                    "this.session = session;",
                    "",
                    "var sessionInfo = Ext.getStore('SessionStore');",
                    "sessionInfo.removeAll();",
                    "sessionInfo.sync();",
                    "",
                    "var newRecord;",
                    "if(ops == 'json') {",
                    "",
                    "    newRecord = new MyApp.model.SessionModel({",
                    "        userId\t\t: this.session.userId,",
                    "        loginId\t\t: this.session.loginId,",
                    "        userName\t: this.session.userName,",
                    "        deptName\t: this.session.deptName,",
                    "        email\t\t: this.session.email,",
                    "        lastLogon\t: this.session.lastLogon,",
                    "        authorities : this.session.authorities",
                    "    });",
                    "",
                    "} else {",
                    "",
                    "    newRecord = new MyApp.model.SessionModel({",
                    "        userId\t\t: this.session.get(\"userId\"),",
                    "        loginId\t\t: this.session.get(\"loginId\"),",
                    "        userName\t: this.session.get(\"userName\"),",
                    "        deptName\t: this.session.get(\"deptName\"),",
                    "        email\t\t: this.session.get(\"email\"),",
                    "        lastLogon\t: this.session.get(\"lastLogon\"),",
                    "        authorities : this.session.get(\"authorities\")",
                    "    });",
                    "",
                    "}",
                    "",
                    "sessionInfo.add(newRecord);",
                    "sessionInfo.sync();",
                    "",
                    "// Close window",
                    "var loginWindow = Ext.getCmp('loginWindow');",
                    "if(loginWindow != null) {",
                    "    Ext.getCmp('loginWindow').destroy();",
                    "}",
                    "",
                    "//Main Layout 설정",
                    "Ext.getCmp(\"peacockViewport\").layout.setActiveItem(1);",
                    "this.getUserSplitBtn().setText(newRecord.get(\"userName\"));",
                    "Ext.getCmp(\"topLastLogonLabel\").setText(\"(최근 접속시간 : \"+newRecord.get(\"lastLogon\")+\")\");",
                    "",
                    "//Menu 권한 설정",
                    "this.initMenuAuthSetting();"
                ]
            },
            "designerId": "1380812f-f70a-462c-b368-ff8cd3a193de"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initMenuAuthSetting",
                "implHandler": [
                    "",
                    "var menuTreeStore = Ext.getStore(\"MenuTreeStore\");",
                    "",
                    "var sessionStore = Ext.getStore('SessionStore');",
                    "var authorities = sessionStore.getAt(0).get(\"authorities\");",
                    "",
                    "var adminFlag = false;",
                    "",
                    "Ext.each(authorities, function (auth){",
                    "",
                    "    if(auth.authority == \"ROLE_ADMIN\") {",
                    "        adminFlag = true;",
                    "        return true;",
                    "    }",
                    "",
                    "});",
                    "",
                    "if(adminFlag) {",
                    "",
                    "    instancesConstants.writeMenuAuth = true;",
                    "    RHEVMConstants.writeMenuAuth = true;",
                    "    almConstants.writeMenuAuth01 = true;",
                    "    almConstants.writeMenuAuth02 = true;",
                    "    almConstants.writeMenuAuth03 = true;",
                    "    almConstants.writeMenuAuth04 = true;",
                    "    userConstants.writeMenuAuth01 = true;",
                    "    userConstants.writeMenuAuth02 = true;",
                    "",
                    "} else {",
                    "",
                    "    //Left Menu Read 권한 설정",
                    "    Ext.getCmp(\"menuTreePanel\").getRootNode().cascadeBy(function(n) {",
                    "",
                    "        var displayFlag = false;",
                    "",
                    "        if(n.id.indexOf(\"DASHBOARD\") > -1) {",
                    "",
                    "            displayFlag = true;",
                    "",
                    "        } else {",
                    "",
                    "            Ext.each(authorities, function (auth){",
                    "",
                    "                if(n.id.indexOf(auth.authority) > -1) {",
                    "                    displayFlag = true;",
                    "                    return false;",
                    "                }",
                    "",
                    "            });",
                    "",
                    "            var el = Ext.fly(Ext.getCmp(\"menuTreePanel\").getView().getNodeByRecord(n));",
                    "            if (el != null) {",
                    "                el.setDisplayed(displayFlag);",
                    "            }",
                    "        }",
                    "",
                    "    });",
                    "",
                    "    //그 외 설정",
                    "    Ext.getCmp(\"almTabPanel\").items.each(function(item, idx){",
                    "        Ext.getCmp(\"almTabPanel\").items.getAt(idx).setDisabled(true);",
                    "    });",
                    "",
                    "    Ext.getCmp(\"adminTabPanel\").items.each(function(item, idx){",
                    "        Ext.getCmp(\"adminTabPanel\").items.getAt(idx).setDisabled(true);",
                    "    });",
                    "",
                    "    Ext.get(\"instancesContainer\").select(\".auth-write\").hide();",
                    "    Ext.get(\"rhevmContainer\").select(\".auth-write\").hide();",
                    "",
                    "    Ext.each(authorities, function (auth){",
                    "",
                    "        if(auth.authority == \"ROLE_B1_WRITE\") {",
                    "",
                    "            instancesConstants.writeMenuAuth = true;",
                    "            Ext.get(\"instancesContainer\").select(\".auth-write\").show();",
                    "",
                    "        } else if(auth.authority == \"ROLE_B2_WRITE\") {",
                    "",
                    "            RHEVMConstants.writeMenuAuth = true;",
                    "            Ext.get(\"rhevmContainer\").select(\".auth-write\").show();",
                    "",
                    "        } else if(auth.authority == \"ROLE_B301_READ\") {",
                    "",
                    "            Ext.getCmp(\"almTabPanel\").items.getAt(0).setDisabled(false);",
                    "",
                    "        } else if(auth.authority == \"ROLE_B301_WRITE\") {",
                    "",
                    "            almConstants.writeMenuAuth01 = true;",
                    "",
                    "        } else if(auth.authority == \"ROLE_B302_READ\") {",
                    "",
                    "            Ext.getCmp(\"almTabPanel\").items.getAt(1).setDisabled(false);",
                    "",
                    "        } else if(auth.authority == \"ROLE_B302_WRITE\") {",
                    "",
                    "            almConstants.writeMenuAuth02 = true;",
                    "",
                    "        } else if(auth.authority == \"ROLE_B303_READ\") {",
                    "",
                    "            Ext.getCmp(\"almTabPanel\").items.getAt(2).setDisabled(false);",
                    "",
                    "        } else if(auth.authority == \"ROLE_B303_WRITE\") {",
                    "",
                    "            almConstants.writeMenuAuth03 = true;",
                    "",
                    "        } else if(auth.authority == \"ROLE_B304_READ\") {",
                    "",
                    "            Ext.getCmp(\"almTabPanel\").items.getAt(3).setDisabled(false);",
                    "",
                    "        } else if(auth.authority == \"ROLE_B304_WRITE\") {",
                    "",
                    "            almConstants.writeMenuAuth04 = true;",
                    "",
                    "        } else if(auth.authority == \"ROLE_B401_READ\") {",
                    "",
                    "            Ext.getCmp(\"adminTabPanel\").items.getAt(0).setDisabled(false);",
                    "",
                    "        } else if(auth.authority == \"ROLE_B401_WRITE\") {",
                    "",
                    "            userConstants.writeMenuAuth01 = true;",
                    "",
                    "        } else if(auth.authority == \"ROLE_B402_READ\") {",
                    "",
                    "            Ext.getCmp(\"adminTabPanel\").items.getAt(1).setDisabled(false);",
                    "",
                    "        } else if(auth.authority == \"ROLE_B402_WRITE\") {",
                    "",
                    "            userConstants.writeMenuAuth02 = true;",
                    "",
                    "        }",
                    "",
                    "    });",
                    "",
                    "}",
                    "",
                    "Ext.getCmp(\"menuTreeView\").selModel.select(0);",
                    "Ext.getCmp(\"menuTreeView\").fireEvent('cellclick', Ext.getCmp(\"menuTreeView\"), null, null, menuTreeStore.getRootNode().firstChild);",
                    ""
                ]
            },
            "designerId": "5c31f8eb-e192-4769-9242-03d689c12f85"
        }
    ]
}