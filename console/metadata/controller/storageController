{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "storageController",
        "id": "storageController"
    },
    "designerId": "2b6f81fe-43bc-4d5a-8f36-22b2fbcccbfe",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageMainData",
                "implHandler": [
                    "Ext.getCmp(\"storageMainGrid\").getStore().load();",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + \"ceph/grid/cephstatus\",",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "",
                    "        var htmlData = '<pre>\\r\\n';",
                    "        htmlData += data.data + '\\r\\n';",
                    "        htmlData += '</pre>';",
                    "",
                    "        Ext.getCmp(\"storageMainDetail\").update(htmlData);",
                    "        Ext.getCmp(\"storageMainDetail\").updateLayout();",
                    "    }",
                    "});",
                    "",
                    "this.setStorageTopButtonsText();"
                ]
            },
            "designerId": "b21b07b2-61ca-4b52-88db-56e8bdff819c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageHostData",
                "implHandler": [
                    "Ext.getCmp(storageConstants.workingGrid).getStore().load();",
                    "this.setStorageHostButtonText();"
                ]
            },
            "designerId": "fad7407a-335a-4dd9-86c8-8934b9f201f6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageMonData",
                "implHandler": [
                    "Ext.getCmp(storageConstants.workingGrid).getStore().load();",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + \"ceph/grid/mondetail\",",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "        Ext.getCmp(\"storageMonDetail\").update(data.data);",
                    "    }",
                    "});",
                    "",
                    "this.setStorageMonButtonText();"
                ]
            },
            "designerId": "3234051b-c7fa-40af-b0fa-0741b4e8f4e0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageOsdData",
                "implHandler": [
                    "Ext.getCmp(storageConstants.workingGrid).getStore().load();",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + \"ceph/grid/osdlist\",",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "        Ext.getCmp(\"storageOsdDetail\").update(data.data);",
                    "    }",
                    "});",
                    "",
                    "this.setStorageOsdButtonText();"
                ]
            },
            "designerId": "459f2dba-7e73-4b6d-8425-9ee528de4906"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStoragePoolData",
                "implHandler": [
                    "Ext.getCmp(storageConstants.workingGrid).getStore().load();",
                    "this.setStoragePoolButtonText();"
                ]
            },
            "designerId": "db2dbf2e-2ea0-4aa4-8970-e1a51c5a5649"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStoragePgData",
                "implHandler": [
                    "Ext.getCmp(storageConstants.workingGrid).getStore().load();",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + \"ceph/grid/pgdetail\",",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "        Ext.getCmp(\"storagePgDetail\").update(data.data[0]);",
                    "    }",
                    "});",
                    "",
                    "this.setStoragePgButtonText();"
                ]
            },
            "designerId": "b9f83a46-4a9d-4f1d-9eea-57ff7f16ae6b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageUsageData",
                "implHandler": [
                    "//Ext.getCmp(storageConstants.workingGrid).getStore().loadPage(1);",
                    "Ext.getCmp(storageConstants.workingGrid).getStore().load();",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + \"ceph/grid/usagedetail\",",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "        Ext.getCmp(\"storageUsageDetail1\").update(data.data[0]);",
                    "    }",
                    "});",
                    "",
                    "var myChart = Ext.getCmp('storageUsageDetailChart');",
                    "myChart.getStore().load();",
                    "",
                    "this.setStorageUsageButtonText();"
                ]
            },
            "designerId": "19653a38-f62a-4e39-9302-0eb42a30ec61"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageTopButtonsText",
                "implHandler": [
                    "this.setStorageHostButtonText();",
                    "this.setStorageMonButtonText();",
                    "this.setStorageOsdButtonText();",
                    "this.setStoragePoolButtonText();",
                    "this.setStoragePgButtonText();",
                    "this.setStorageUsageButtonText();",
                    ""
                ]
            },
            "designerId": "5182f0b7-3f87-4baa-b02c-33442f056bb3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageHostButtonText",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url: Ext.getCmp('storageHostGrid').getStore().getProxy().url,",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "",
                    "        var totalCnt = 0;",
                    "        var activeCnt = 0;",
                    "",
                    "        Ext.each(data.data, function(list){",
                    "            totalCnt++;",
                    "            if (list.running === true){",
                    "                activeCnt++;",
                    "            }",
                    "        });",
                    "",
                    "        var textData = \"HOST<br>\" + activeCnt.toString() + \" / \" + totalCnt.toString() + \"<br>Running\";",
                    "        Ext.getCmp(\"storageHostButton\").setText(textData);",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "5a2af19a-f4a2-48bd-8016-7a20c615e1cc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageMonButtonText",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url: Ext.getCmp('storageMonGrid').getStore().getProxy().url,",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "",
                    "        var totalCnt = 0;",
                    "        var activeCnt = 0;",
                    "",
                    "        Ext.each(data.data, function(list){",
                    "            totalCnt++;",
                    "            if (list.in_quorum === true){",
                    "                activeCnt++;",
                    "            }",
                    "        });",
                    "",
                    "        var textData = \"MON<br>\" + activeCnt.toString() + \" / \" + totalCnt.toString() + \"<br>Quorum\";",
                    "        Ext.getCmp(\"storageMonButton\").setText(textData);",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "e9c73e4b-f748-431e-8d1f-d31f6018975a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageOsdButtonText",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url: Ext.getCmp('storageOsdGrid').getStore().getProxy().url,",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "",
                    "        var totalCnt = 0;",
                    "        var activeCnt = 0;",
                    "",
                    "        Ext.each(data.data, function(list){",
                    "            totalCnt++;",
                    "            if ((list.status == 'up/in') || (list.status == 'in/up')){",
                    "                activeCnt++;",
                    "            }",
                    "        });",
                    "",
                    "        var textData = \"OSD<br>\" + activeCnt.toString() + \" / \" + totalCnt.toString() + \"<br>In & Up\";",
                    "        Ext.getCmp(\"storageOsdButton\").setText(textData);",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "a3b342f2-1d54-4c6b-9e8f-f2dde9d623ea"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStoragePoolButtonText",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url: Ext.getCmp('storagePoolGrid').getStore().getProxy().url,",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "",
                    "        var totalCnt = 0;",
                    "        var activeCnt = 0;",
                    "",
                    "        totalCnt = data.data.length;",
                    "",
                    "        var textData = \"POOL<br>\" + totalCnt.toString() + \"<br>Active\";",
                    "        Ext.getCmp(\"storagePoolButton\").setText(textData);",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "1b9b4bbc-4650-4cd0-8e4e-3f354e091d8b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStoragePgButtonText",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url: Ext.getCmp('storagePgGrid').getStore().getProxy().url,",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "",
                    "        var totalCnt = 0;",
                    "        var activeCnt = 0;",
                    "",
                    "        Ext.each(data.data, function(list){",
                    "            totalCnt += list.num;",
                    "            if (list.name == 'active+clean'){",
                    "                activeCnt += list.num;",
                    "            }",
                    "        });",
                    "",
                    "        var textData = \"PG Status<br>\" + activeCnt.toString() + \" / \" + totalCnt.toString() + \"<br>Active/Clean\";",
                    "        Ext.getCmp(\"storagePgButton\").setText(textData);",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "72cd8506-9235-4339-bd7b-ad8cc6259fc0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setStorageUsageButtonText",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + \"ceph/grid/usagedetail\",",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "",
                    "        var totalCnt = 0;",
                    "        var activeCnt = 0;",
                    "        var units = '';",
                    "",
                    "        Ext.each(data.data, function(list){",
                    "            totalCnt += list.total_kb;",
                    "            activeCnt += list.total_kb_used;",
                    "        });",
                    "",
                    "        if (totalCnt > 1073741824){",
                    "            totalCnt  /= 1073741824;  // Kb -> Tb (1024 * 1024 * 1024)",
                    "            activeCnt /= 1073741824;  // Kb -> Tb (1024 * 1024 * 1024)",
                    "            units = 'Tb';",
                    "        } else {",
                    "            totalCnt  /= 1048576;  // Kb -> Gb (1024 * 1024)",
                    "            activeCnt /= 1048576;     // Kb -> Gb (1024 * 1024)",
                    "            units = 'Gb';",
                    "        }",
                    "",
                    "        var textData = \"Usage<br>&nbsp;<br>\" + activeCnt.toFixed(1) + units + \" / \" + totalCnt.toFixed(1) + units;",
                    "        Ext.getCmp(\"storageUsageButton\").setText(textData);",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "e9d9b9e0-2c69-457e-baae-578b96c461d3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "addStorageMon",
                "implHandler": [
                    "//Add Mon Execute",
                    "",
                    "var myForm = Ext.getCmp(\"monAddFormPanel\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "",
                    "var host = myForm.getForm().findField(\"monAddHost\").getValue();",
                    "var user = myForm.getForm().findField(\"monAddUser\").getValue();",
                    "var pass = myForm.getForm().findField(\"monAddPass\").getValue();",
                    "",
                    "var params = 'host=' + host + '&' + 'user=' + user + '&' + 'pass=' + pass;",
                    "",
                    "",
                    "var myGrid = Ext.getCmp(\"storageMonGrid\");",
                    "var myStore = myGrid.getStore();",
                    "var myName = '';",
                    "",
                    "for (var i = 0; i < myStore.count(); i++) {",
                    "    myName = myStore.getAt(i).get('server');",
                    "    if (myName == host) {",
                    "        alert('Host (' + host + ') already exist.');",
                    "        myForm.getForm().findField(\"monAddHost\").focus();",
                    "        return;",
                    "    }",
                    "}",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + \"ceph/mon/add?\" + params,",
                    "    method : \"GET\",",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "        if (data.success === true) {",
                    "            storageConstants.me.setStorageMonData();",
                    "            myForm.up('window').close();",
                    "            storageConstants.me.setStorageMonButtonText();",
                    "        } else {",
                    "            Ext.Msg.alert({",
                    "                title: \"MON Add Failure\",",
                    "                msg: data.msg,",
                    "                buttons: Ext.Msg.OK,",
                    "                fn: function(choice) {",
                    "                    myForm.getForm().findField(\"monAddHost\").focus();",
                    "                },",
                    "                icon: Ext.Msg.ERROR",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "724eed1f-9684-4086-8e88-079ba1ab9c46"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "addStorageOsd",
                "implHandler": [
                    "//Add Osd Execute",
                    "",
                    "var myForm = Ext.getCmp(\"osdAddFormPanel\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "",
                    "var host = myForm.getForm().findField(\"osdAddHost\").getValue();",
                    "var path = myForm.getForm().findField(\"osdAddPath\").getValue();",
                    "",
                    "var params = 'host=' + host + '&' + 'path=' + path;",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + \"ceph/osd/add?\" + params,",
                    "    method : \"GET\",",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "        if (data.success === true) {",
                    "            storageConstants.me.setStorageOsdData();",
                    "            myForm.up('window').close();",
                    "            storageConstants.me.setStorageOsdButtonText();",
                    "        } else {",
                    "            Ext.Msg.alert({",
                    "                title: \"OSD Add Failure\",",
                    "                msg: data.msg,",
                    "                buttons: Ext.Msg.OK,",
                    "                fn: function(choice) {",
                    "                    myForm.getForm().findField(\"osdAddHost\").focus();",
                    "                },",
                    "                icon: Ext.Msg.ERROR",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "6fd6fb02-156d-4076-9224-3d836e9bfc10"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "addStoragePool",
                "implHandler": [
                    "//Add Pool Execute",
                    "",
                    "var myForm = Ext.getCmp(\"poolAddFormPanel\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "",
                    "var name = myForm.getForm().findField(\"poolAddName\").getValue();",
                    "var size = myForm.getForm().findField(\"poolAddSize\").getValue();",
                    "var pgnm = myForm.getForm().findField(\"poolAddPgNum\").getValue();",
                    "",
                    "var params = '';",
                    "",
                    "if (storageConstants.editMode == 'add') {",
                    "    var myGrid = Ext.getCmp(\"storagePoolGrid\");",
                    "    var myStore = myGrid.getStore();",
                    "    var myName = '';",
                    "",
                    "    for (var i = 0; i < myStore.count(); i++) {",
                    "        myName = myStore.getAt(i).get('name');",
                    "        if (myName == name) {",
                    "            alert('Pool name(' + name + ') already exist.');",
                    "            myForm.getForm().findField(\"poolAddName\").focus();",
                    "            return;",
                    "        }",
                    "    }",
                    "",
                    "    params = 'pool=' + name + '&' + 'pg_num=' + pgnm;",
                    "",
                    "    Ext.Ajax.request({",
                    "        url: GLOBAL.urlPrefix + \"ceph/pool/create?\" + params,",
                    "        method : \"GET\",",
                    "        disableCaching : true,",
                    "        success: function(response){",
                    "            var data = Ext.decode(response.responseText);",
                    "",
                    "            if (data.success === true) {",
                    "                params = 'name=' + name + '&' + 'size=' + size;",
                    "                Ext.Ajax.request({",
                    "                    url: GLOBAL.urlPrefix + \"ceph/pool/set/size?\" + params,",
                    "                    method : \"GET\",",
                    "                    disableCaching : true,",
                    "                    success: function(response){",
                    "                        var data = Ext.decode(response.responseText);",
                    "",
                    "                        if (data.success !== true) {",
                    "                            Ext.Msg.alert({",
                    "                                title: \"Failure\",",
                    "                                msg: data.msg,",
                    "                                buttons: Ext.Msg.OK,",
                    "                                icon: Ext.Msg.ERROR",
                    "                            });",
                    "                        }",
                    "",
                    "                        storageConstants.me.setStoragePoolData();",
                    "                        myForm.up('window').close();",
                    "                        storageConstants.me.setStoragePoolButtonText();",
                    "                    }",
                    "                });",
                    "            } else {",
                    "                Ext.Msg.alert({",
                    "                    title: \"POOL Add Failure\",",
                    "                    msg: data.msg,",
                    "                    buttons: Ext.Msg.OK,",
                    "                    fn: function(choice) {",
                    "                        myForm.getForm().findField(\"poolAddName\").focus();",
                    "                    },",
                    "                    icon: Ext.Msg.ERROR",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "} else {",
                    "    var oName = storageConstants.selectRow.get('name');",
                    "    var oSize = storageConstants.selectRow.get('size');",
                    "    var oPgnm = storageConstants.selectRow.get('pg_num');",
                    "",
                    "    if (oName != name) {",
                    "        var myGrid = Ext.getCmp(\"storagePoolGrid\");",
                    "        var myStore = myGrid.getStore();",
                    "        var myName = '';",
                    "",
                    "        for (var i = 0; i < myStore.count(); i++) {",
                    "            myName = myStore.getAt(i).get('name');",
                    "            if (myName == name) {",
                    "                alert('Pool name(' + name + ') already exist.');",
                    "                myForm.getForm().findField(\"poolAddName\").focus();",
                    "                return;",
                    "            }",
                    "        }",
                    "",
                    "        params = 'name=' + oName + '&' + 'srcpool=' + oName + '&' + 'destpool=' + name;",
                    "        Ext.Ajax.request({",
                    "            url: GLOBAL.urlPrefix + \"ceph/pool/rename?\" + params,",
                    "            method : \"GET\",",
                    "            disableCaching : true,",
                    "            success: function(response){",
                    "                var data = Ext.decode(response.responseText);",
                    "",
                    "                if (data.success !== true) {",
                    "                    Ext.Msg.alert({",
                    "                        title: \"POOL Rename Failure\",",
                    "                        msg: data.msg,",
                    "                        buttons: Ext.Msg.OK,",
                    "                        icon: Ext.Msg.ERROR",
                    "                    });",
                    "                } else {",
                    "                    storageConstants.me.setStoragePoolData();",
                    "                    storageConstants.me.setStoragePoolButtonText();",
                    "                }",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "    if (oSize != size) {",
                    "        params = 'name=' + name + '&' + 'size=' + size;",
                    "        Ext.Ajax.request({",
                    "            url: GLOBAL.urlPrefix + \"ceph/pool/set/size?\" + params,",
                    "            method : \"GET\",",
                    "            disableCaching : true,",
                    "            success: function(response){",
                    "                var data = Ext.decode(response.responseText);",
                    "",
                    "                if (data.success !== true) {",
                    "                    Ext.Msg.alert({",
                    "                        title: \"POOL Setting Size Failure\",",
                    "                        msg: data.msg,",
                    "                        buttons: Ext.Msg.OK,",
                    "                        icon: Ext.Msg.ERROR",
                    "                    });",
                    "                } else {",
                    "                    storageConstants.me.setStoragePoolData();",
                    "                    storageConstants.me.setStoragePoolButtonText();",
                    "                }",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "    if (oPgnm != pgnm) {",
                    "        params = 'name=' + name + '&' + 'pg_num=' + pgnm;",
                    "        Ext.Ajax.request({",
                    "            url: GLOBAL.urlPrefix + \"ceph/pool/set/pg_num?\" + params,",
                    "            method : \"GET\",",
                    "            disableCaching : true,",
                    "            success: function(response){",
                    "                var data = Ext.decode(response.responseText);",
                    "",
                    "                if (data.success !== true) {",
                    "                    Ext.Msg.alert({",
                    "                        title: \"POOL Setting PG Num Failure\",",
                    "                        msg: data.msg,",
                    "                        buttons: Ext.Msg.OK,",
                    "                        icon: Ext.Msg.ERROR",
                    "                    });",
                    "                } else {",
                    "                    storageConstants.me.setStoragePoolData();",
                    "                    storageConstants.me.setStoragePoolButtonText();",
                    "                }",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "    myForm.up('window').close();",
                    "}",
                    ""
                ]
            },
            "designerId": "885d8cb1-37c6-4ee4-8da5-721c7175fe83"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteStorageMon",
                "implHandler": [
                    "var name = storageConstants.selectRow.get('name');",
                    "var params = 'name=' + name;",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Delete selected MON?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            alert('Call Delete MON api ....');",
                    "            storageConstants.me.setStorageMonButtonText();        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "16b7454f-5bad-478d-98b7-1a9c60294ef0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteStorageOsd",
                "implHandler": [
                    "var host = storageConstants.selectRow.get('host');",
                    "var id = storageConstants.selectRow.get('id');  // name으로 바꿔야될 것 같음(api 수정 확인)",
                    "",
                    "var params = 'host=' + host + '&' + 'id=' + id;",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Delete selected OSD?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            Ext.Ajax.request({",
                    "                url: GLOBAL.urlPrefix + \"ceph/osd/delete?\" + params,",
                    "                method : \"GET\",",
                    "                disableCaching : true,",
                    "                success: function(response){",
                    "                    var data = Ext.decode(response.responseText);",
                    "",
                    "                    if (data.success === true) {",
                    "                        storageConstants.me.setStorageOsdData();",
                    "                        storageConstants.me.setStorageOsdButtonText();",
                    "                    } else {",
                    "                        Ext.Msg.alert({",
                    "                            title: \"OSD Delete Failure\",",
                    "                            msg: data.msg,",
                    "                            buttons: Ext.Msg.OK,",
                    "                            icon: Ext.Msg.ERROR",
                    "                        });",
                    "                    }",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "d2d80a1e-1acd-428b-ba76-54d74a4e761c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "editStoragePool",
                "implHandler": [
                    "//Add Popup 호출(title = Edit)",
                    "",
                    "storageConstants.editMode = 'edit';",
                    "var AddWindow = Ext.create('widget.poolAddWindow');",
                    "AddWindow.title = 'Edit POOL';",
                    "",
                    "var myForm = Ext.getCmp(\"poolAddFormPanel\");",
                    "var nameField = myForm.getForm().findField(\"poolAddName\");",
                    "var sizeField = myForm.getForm().findField(\"poolAddSize\");",
                    "var pgnmField = myForm.getForm().findField(\"poolAddPgNum\");",
                    "",
                    "var name = storageConstants.selectRow.get('name');",
                    "var size = storageConstants.selectRow.get('size');",
                    "var pgnm = storageConstants.selectRow.get('pg_num');",
                    "",
                    "nameField.setValue(name);",
                    "sizeField.setValue(size);",
                    "pgnmField.setValue(pgnm);",
                    "",
                    "AddWindow.show();",
                    ""
                ]
            },
            "designerId": "a2f1cb0e-972b-4b48-910e-e937b4cbdf38"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteStoragePool",
                "implHandler": [
                    "var name = storageConstants.selectRow.get('name');",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Delete selected POOL?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "",
                    "            Ext.Ajax.request({",
                    "                url: GLOBAL.urlPrefix + \"ceph/pool/delete?pool=\" + name,",
                    "                method : \"GET\",",
                    "                disableCaching : true,",
                    "                success: function(response){",
                    "                    var data = Ext.decode(response.responseText);",
                    "",
                    "                    if (data.success === true) {",
                    "                        storageConstants.me.setStoragePoolData();",
                    "                        storageConstants.me.setStoragePoolButtonText();",
                    "                    } else {",
                    "                        Ext.Msg.alert({",
                    "                            title: \"POOL Delete Failure\",",
                    "                            msg: data.msg,",
                    "                            buttons: Ext.Msg.OK,",
                    "                            icon: Ext.Msg.ERROR",
                    "                        });",
                    "                    }",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "1b377855-09b1-4166-aa00-66f5aa5360af"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "addClusterServer",
                "implHandler": [
                    "var myForm = Ext.getCmp(\"clusterServerFormPanel\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "",
                    "var host = myForm.getForm().findField(\"clusterServerHost\").getValue();",
                    "var addr = myForm.getForm().findField(\"clusterServerIp\").getValue();",
                    "var type = myForm.getForm().findField(\"clusterServerType\").getValue();",
                    "var user = myForm.getForm().findField(\"clusterServerUser\").getValue();",
                    "var pass = myForm.getForm().findField(\"clusterServerPass\").getValue();",
                    "",
                    "var myData = [{'hostname':host, 'ip':addr, 'type':type, 'username':user, 'password':pass}];",
                    "",
                    "",
                    "var myGrid = Ext.getCmp(\"ClusterServersGrid\");",
                    "var myStore = myGrid.getStore();",
                    "var myHost = '';",
                    "var myIp = '';",
                    "",
                    "for (var i = 0; i < myStore.count(); i++) {",
                    "    myHost = myStore.getAt(i).get('hostname');",
                    "    myIp = myStore.getAt(i).get('ip');",
                    "    if (myHost == host) {",
                    "        alert('Hostname(' + host + ') already exist.');",
                    "        myForm.getForm().findField(\"clusterServerHost\").focus();",
                    "        return;",
                    "    }",
                    "    if (myIp == addr) {",
                    "        alert('Ip(' + addr + ') already exist.');",
                    "        myForm.getForm().findField(\"clusterServerIp\").focus();",
                    "        return;",
                    "    }",
                    "    if ((type == 'management') && (myStore.getAt(i).get('type') == type)) {",
                    "        alert('managemrnt Type already exist.');",
                    "        myForm.getForm().findField(\"clusterServerType\").focus();",
                    "        return;",
                    "    }",
                    "    if ((type == 'radosgw') && (myStore.getAt(i).get('type') == type)) {",
                    "        alert('radosgw Type already exist.');",
                    "        myForm.getForm().findField(\"clusterServerType\").focus();",
                    "        return;",
                    "    }",
                    "}",
                    "",
                    "",
                    "Ext.getCmp('ClusterServersGrid').getStore().loadRawData(myData, true);",
                    "",
                    ""
                ]
            },
            "designerId": "3a1e1e6c-bf08-4eeb-a1f6-5998c1d2b9e3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "addOsdDevicePath",
                "implHandler": [
                    "var myForm = Ext.getCmp(\"clusterDevicePathFormPanel\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "",
                    "var path = myForm.getForm().findField(\"osdDevicePath\").getValue();",
                    "var myData = [{'path':path}];",
                    "",
                    "",
                    "var myGrid = Ext.getCmp(\"OsdDevicePathGrid\");",
                    "var myStore = myGrid.getStore();",
                    "var myName = '';",
                    "",
                    "for (var i = 0; i < myStore.count(); i++) {",
                    "    myName = myStore.getAt(i).get('path');",
                    "    if (myName == path) {",
                    "        alert('Path(' + path + ') already exist.');",
                    "        myForm.getForm().findField(\"osdDevicePath\").focus();",
                    "        return;",
                    "    }",
                    "}",
                    "",
                    "",
                    "Ext.getCmp('OsdDevicePathGrid').getStore().loadRawData(myData, true);",
                    ""
                ]
            },
            "designerId": "81101309-b9fd-4843-874b-99eaf3807ee9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteClusterServer",
                "implHandler": [
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Delete selected Server?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            Ext.getCmp('ClusterServersGrid').getStore().remove(storageConstants.selectRow);",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "4787ac1d-3448-44c6-b0c0-a82679772d09"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteClusterPath",
                "implHandler": [
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Delete selected Path?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            Ext.getCmp('OsdDevicePathGrid').getStore().remove(storageConstants.selectRow);",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "e2294d3d-e919-433e-9dcc-999cceaa7fee"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "var storage = this;",
                    "",
                    "var monGridContextMenu = new Ext.menu.Menu({",
                    "    items:",
                    "    [",
                    "/*",
                    "        { text: 'Edit',",
                    "         handler: function() {",
                    "             storage.editStorageMon();",
                    "         }",
                    "        },",
                    "*/",
                    "        { text: 'Delete',",
                    "         handler: function() {",
                    "             storage.deleteStorageMon();",
                    "         }",
                    "        }",
                    "    ]",
                    "});",
                    "",
                    "var poolGridContextMenu = new Ext.menu.Menu({",
                    "    items:",
                    "    [",
                    "        { text: 'Edit',",
                    "         handler: function() {",
                    "             storage.editStoragePool();",
                    "         }",
                    "        },",
                    "        { text: 'Delete',",
                    "         handler: function() {",
                    "             storage.deleteStoragePool();",
                    "         }",
                    "        }",
                    "    ]",
                    "});",
                    "",
                    "var osdGridContextMenu = new Ext.menu.Menu({",
                    "    items:",
                    "    [",
                    "        { text: 'Delete',",
                    "         handler: function() {",
                    "             storage.deleteStorageOsd();",
                    "         }",
                    "        }",
                    "    ]",
                    "});",
                    "",
                    "var serverGridContextMenu = new Ext.menu.Menu({",
                    "    items:",
                    "    [",
                    "        { text: 'Delete',",
                    "         handler: function() {",
                    "             storage.deleteClusterServer();",
                    "         }",
                    "        }",
                    "    ]",
                    "});",
                    "",
                    "var pathGridContextMenu = new Ext.menu.Menu({",
                    "    items:",
                    "    [",
                    "        { text: 'Delete',",
                    "         handler: function() {",
                    "             storage.deleteClusterPath();",
                    "         }",
                    "        }",
                    "    ]",
                    "});",
                    "",
                    "Ext.define('storageConstants', {",
                    "    singleton: true,",
                    "    me : storage,",
                    "    monContextMenu: monGridContextMenu,",
                    "    poolContextMenu: poolGridContextMenu,",
                    "    osdContextMenu: osdGridContextMenu,",
                    "    serverContextMenu: serverGridContextMenu,",
                    "    pathContextMenu: pathGridContextMenu,",
                    "    workingGrid: '',",
                    "    selectRow:  null,",
                    "    selectIndex: 0,",
                    "    editMode: 'add',",
                    "    chartInterval : null",
                    "});"
                ]
            },
            "designerId": "5389ed0c-dbb6-49b9-a2b7-5a906c678e8a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageMainContainer",
                "designer|targetType": "Ext.container.Container",
                "fn": "onStorageMainContainerActivate",
                "implHandler": [
                    "storageConstants.workingGrid = 'storageMainGrid';",
                    "",
                    "this.setStorageMainData();"
                ],
                "name": "activate",
                "scope": "me"
            },
            "designerId": "a418db09-e50f-4684-93d3-665e4fccf25c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageHostButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onStorageHostButtonClick",
                "implHandler": [
                    "storageConstants.workingGrid = 'storageHostGrid';",
                    "",
                    "Ext.getCmp('storageCenterContainer').layout.setActiveItem(1);",
                    "this.setStorageHostData();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "7ae3c45b-940e-4e94-b4ac-32927f4f2caa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageMonButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onStorageMonButtonClick",
                "implHandler": [
                    "storageConstants.workingGrid = 'storageMonGrid';",
                    "",
                    "Ext.getCmp('storageCenterContainer').layout.setActiveItem(2);",
                    "this.setStorageMonData();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "e557fe1e-8fe6-48ac-bfba-b6be8c63ad8e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageOsdButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onStorageOsdButtonClick",
                "implHandler": [
                    "storageConstants.workingGrid = 'storageOsdGrid';",
                    "",
                    "Ext.getCmp('storageCenterContainer').layout.setActiveItem(3);",
                    "this.setStorageOsdData();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "967ffec4-6f78-4d16-9087-b39496415292"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storagePoolButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onStoragePoolButtonClick",
                "implHandler": [
                    "storageConstants.workingGrid = 'storagePoolGrid';",
                    "",
                    "Ext.getCmp('storageCenterContainer').layout.setActiveItem(4);",
                    "this.setStoragePoolData();",
                    "",
                    "var myGrid = Ext.getCmp(storageConstants.workingGrid);",
                    "myGrid.selModel.select(0);",
                    "myGrid.fireEvent('cellclick', myGrid, null, 0, 0, null, 0);",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "019259e4-1c2c-4ac8-8daf-40adfb7ab64a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storagePgButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onStoragePgButtonClick",
                "implHandler": [
                    "storageConstants.workingGrid = 'storagePgGrid';",
                    "",
                    "Ext.getCmp('storageCenterContainer').layout.setActiveItem(5);",
                    "this.setStoragePgData();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "171b2766-16bf-4ccc-b91b-fcd24b7f08d2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageUsageButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onStorageUsageButtonClick",
                "implHandler": [
                    "storageConstants.workingGrid = 'storageUsageGrid';",
                    "",
                    "Ext.getCmp('storageCenterContainer').layout.setActiveItem(6);",
                    "this.setStorageUsageData();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "fe473ba8-e8d2-4e81-a4d8-097714866eb8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storagePoolGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onStoragePoolGridpanelCellClick",
                "implHandler": [
                    "storageConstants.selectRow = record;",
                    "storageConstants.selectIndex = rowIndex;",
                    "",
                    "var gId = Ext.getCmp(storageConstants.workingGrid).getStore().getAt(rowIndex).get('id');",
                    "var gNm = Ext.getCmp(storageConstants.workingGrid).getStore().getAt(rowIndex).get('name');",
                    "",
                    "if (gId !== null) {",
                    "    Ext.Ajax.request({",
                    "        url: GLOBAL.urlPrefix + \"ceph/grid/pooldetail/\" + gId,",
                    "        disableCaching : true,",
                    "        success: function(response){",
                    "            var data = Ext.decode(response.responseText);",
                    "            var detail = data.data[0];",
                    "            detail.name = gNm;",
                    "",
                    "            Ext.getCmp(\"storagePoolDetail\").update(detail);",
                    "        }",
                    "    });",
                    "}",
                    ""
                ],
                "name": "cellclick",
                "scope": "me"
            },
            "designerId": "e98f413a-5e2b-49d4-86e1-0ecebe4d11d0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageHostAdd",
                "designer|targetType": "Ext.button.Button",
                "fn": "onHostAddButtonClick",
                "implHandler": [
                    "//CreateClusterWindow 호출",
                    "",
                    "var AddWindow = Ext.create('widget.CreateClusterWindow');",
                    "",
                    "var myForm = Ext.getCmp(\"GeneralConfigurationFormPanel1\");",
                    "myForm.getForm().findField(\"clusterReplicaSize\").setValue(3);",
                    "myForm.getForm().findField(\"clusterPgNum\").setValue(8);",
                    "",
                    "myForm = Ext.getCmp(\"GeneralConfigurationFormPanel2\");",
                    "myForm.getForm().findField(\"clusterJournalSize\").setValue(1024);",
                    "",
                    "AddWindow.show();",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "1c8e3bd8-26f0-43dc-b0ff-93a718031933"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#clusterAddPath",
                "designer|targetType": "Ext.button.Button",
                "fn": "onClusterAddPathButtonClick",
                "implHandler": [
                    "var AddWindow = Ext.create('widget.clusterDevicePathWindow');",
                    "",
                    "AddWindow.show();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "4cd2f9fa-cba2-489b-86d0-da752c27dae1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#clusterAddServer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onClusterAddServerButtonClick",
                "implHandler": [
                    "var AddWindow = Ext.create('widget.clusterServerWindow');",
                    "",
                    "AddWindow.show();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "757c152f-5b79-487e-8a36-5b81424e02a6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageMonAdd",
                "designer|targetType": "Ext.button.Button",
                "fn": "onMonAddButtonClick",
                "implHandler": [
                    "//Add Popup 호출",
                    "",
                    "storageConstants.editMode = 'add';",
                    "var AddWindow = Ext.create('widget.monAddWindow');",
                    "AddWindow.title = 'Add MON';",
                    "",
                    "var myForm = Ext.getCmp(\"monAddFormPanel\");",
                    "var userField = myForm.getForm().findField(\"monAddUser\");",
                    "var passField = myForm.getForm().findField(\"monAddPass\");",
                    "userField.show();",
                    "passField.show();",
                    "",
                    "AddWindow.show();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "7fc4daad-2123-441c-a4ac-29de054caa6f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageOsdAdd",
                "designer|targetType": "Ext.button.Button",
                "fn": "onOsdAddButtonClick",
                "implHandler": [
                    "//Add Popup 호출",
                    "",
                    "storageConstants.editMode = 'add';",
                    "var AddWindow = Ext.create('widget.osdAddWindow');",
                    "AddWindow.title = 'Add OSD';",
                    "AddWindow.show();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "d911b2b5-7be4-4d77-8742-bafea8da9f28"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storagePoolAdd",
                "designer|targetType": "Ext.button.Button",
                "fn": "onPoolAddButtonClick",
                "implHandler": [
                    "//Add Popup 호출",
                    "",
                    "storageConstants.editMode = 'add';",
                    "var AddWindow = Ext.create('widget.poolAddWindow');",
                    "AddWindow.title = 'Add POOL';",
                    "",
                    "var myForm = Ext.getCmp(\"poolAddFormPanel\");",
                    "var nameField = myForm.getForm().findField(\"poolAddName\");",
                    "var sizeField = myForm.getForm().findField(\"poolAddSize\");",
                    "var pgnmField = myForm.getForm().findField(\"poolAddPgNum\");",
                    "",
                    "nameField.setValue('');",
                    "sizeField.setValue(3);",
                    "pgnmField.setValue(8);",
                    "",
                    "AddWindow.show();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "1d42e034-3daf-476e-983b-b7b6773935c5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#createCluster",
                "designer|targetType": "Ext.button.Button",
                "fn": "onCreateClusterButtonClick",
                "implHandler": [
                    "var myForm = Ext.getCmp(\"GeneralConfigurationFormPanel1\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "var replicaSize = myForm.getForm().findField(\"clusterReplicaSize\").getValue();",
                    "var pgNum = myForm.getForm().findField(\"clusterPgNum\").getValue();",
                    "var publicNetwork = myForm.getForm().findField(\"clusterPublicNetwork\").getValue();",
                    "var clusterNetwork = myForm.getForm().findField(\"clusterClusterNetwork\").getValue();",
                    "",
                    "",
                    "",
                    "myForm = Ext.getCmp(\"GeneralConfigurationFormPanel2\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "var journalSize = myForm.getForm().findField(\"clusterJournalSize\").getValue();",
                    "var monNetworkInterface = myForm.getForm().findField(\"clusterMonNetworkInterface\").getValue();",
                    "var fileSystem = myForm.getForm().findField(\"clusterFileSystem\").getValue();",
                    "var ntpServer = myForm.getForm().findField(\"clusterNtpServer\").getValue();",
                    "",
                    "",
                    "",
                    "var hostname = [];",
                    "var ip = [];",
                    "var type = [];",
                    "var userName = [];",
                    "var password = [];",
                    "",
                    "var myGrid = Ext.getCmp(\"ClusterServersGrid\");",
                    "var myStore = myGrid.getStore();",
                    "if (myStore.count() <= 0) {",
                    "    alert('Input Cluster Server informations.');",
                    "    return;",
                    "}",
                    "",
                    "for (var i = 0; i < myStore.count(); i++) {",
                    "    hostname.push(myStore.getAt(i).get('hostname'));",
                    "    ip.push(myStore.getAt(i).get('ip'));",
                    "    type.push(myStore.getAt(i).get('type'));",
                    "    userName.push(myStore.getAt(i).get('username'));",
                    "    password.push(myStore.getAt(i).get('password'));",
                    "}",
                    "",
                    "",
                    "var devicePaths = [];",
                    "var path = '';",
                    "",
                    "myGrid = Ext.getCmp(\"OsdDevicePathGrid\");",
                    "myStore = myGrid.getStore();",
                    "if (myStore.count() <= 0) {",
                    "    alert('Input Osd Device Path informations.');",
                    "    return;",
                    "}",
                    "",
                    "for (var i = 0; i < myStore.count(); i++) {",
                    "    path = myStore.getAt(i).get('path');",
                    "",
                    "    devicePaths.push(path);",
                    "}",
                    "",
                    "",
                    "var params = {",
                    "    'journalSize': journalSize,",
                    "    'monNetworkInterface': monNetworkInterface,",
                    "    'pgNum': pgNum,",
                    "\t'replicaSize': replicaSize,",
                    "\t'publicNetwork': publicNetwork,",
                    "\t'clusterNetwork': clusterNetwork,",
                    "\t'fileSystem': fileSystem,",
                    "\t'ntpServer': ntpServer,",
                    "    'hostname': hostname,",
                    "    'ip': ip,",
                    "    'type': type,",
                    "    'userName': userName,",
                    "    'password': password,",
                    "\t'devicePaths': devicePaths",
                    "};",
                    "",
                    "",
                    "",
                    "var form = Ext.create('Ext.form.Panel', {",
                    "    url: 'software/install',",
                    "    items : [",
                    "        {xtype: 'textfield', name: 'softwareId', value: 7},",
                    "        {xtype: 'textfield', name: 'machineId', value: 'a110bb8f-9494-4ed4-949d-9d6a2defb4df'},",
                    "        {xtype: 'textfield', name: 'journalSize', value: journalSize},",
                    "        {xtype: 'textfield', name: 'monNetworkInterface', value: monNetworkInterface},",
                    "        {xtype: 'textfield', name: 'pgNum', value: pgNum},",
                    "        {xtype: 'textfield', name: 'replicaSize', value: replicaSize},",
                    "        {xtype: 'textfield', name: 'publicNetwork', value: publicNetwork},",
                    "        {xtype: 'textfield', name: 'clusterNetwork', value: clusterNetwork},",
                    "        {xtype: 'textfield', name: 'fileSystem', value: fileSystem},",
                    "        {xtype: 'textfield', name: 'ntpServer', value: ntpServer}",
                    "    ]",
                    "});",
                    "",
                    "for (var i = 0; i < hostname.length; i++) {",
                    "    form.items.add(Ext.create(\"Ext.form.field.Text\", {xtype: 'textfield', name: 'hostname', value: hostname[i]}));",
                    "    form.items.add(Ext.create(\"Ext.form.field.Text\", {xtype: 'textfield', name: 'ip', value: ip[i]}));",
                    "    form.items.add(Ext.create(\"Ext.form.field.Text\", {xtype: 'textfield', name: 'type', value: type[i]}));",
                    "    form.items.add(Ext.create(\"Ext.form.field.Text\", {xtype: 'textfield', name: 'userName', value: userName[i]}));",
                    "    form.items.add(Ext.create(\"Ext.form.field.Text\", {xtype: 'textfield', name: 'password', value: password[i]}));",
                    "}",
                    "",
                    "for (var i = 0; i < devicePaths.length; i++) {",
                    "    form.items.add(Ext.create(\"Ext.form.field.Text\", {xtype: 'textfield', name: 'devicePaths', value: devicePaths[i]}));",
                    "}",
                    "",
                    "console.log(Ext.JSON.encode(form.getValues()));",
                    "alert(Ext.JSON.encode(form.getValues()));",
                    "",
                    "form.submit();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "07129f39-86a2-4961-bea1-4de5c59513ae"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageMonGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onMonGridpanelBeforeItemContextMenu",
                "implHandler": [
                    "var position = e.getXY();",
                    "e.stopEvent();",
                    "",
                    "storageConstants.selectRow = record;",
                    "storageConstants.selectIndex = index;",
                    "",
                    "storageConstants.monContextMenu.showAt(position);"
                ],
                "name": "beforeitemcontextmenu",
                "scope": "me"
            },
            "designerId": "4133bf58-c5dc-46fe-83f2-d87047d4c70f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storageOsdGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onOsdGridpanelBeforeItemContextMenu",
                "implHandler": [
                    "var position = e.getXY();",
                    "e.stopEvent();",
                    "",
                    "storageConstants.selectRow = record;",
                    "storageConstants.selectIndex = index;",
                    "",
                    "storageConstants.osdContextMenu.showAt(position);"
                ],
                "name": "beforeitemcontextmenu",
                "scope": "me"
            },
            "designerId": "28645c73-1a2e-4015-8fa9-0c499f3c3f4f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#storagePoolGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onPoolGridpanelBeforeItemContextMenu",
                "implHandler": [
                    "var position = e.getXY();",
                    "e.stopEvent();",
                    "",
                    "storageConstants.selectRow = record;",
                    "storageConstants.selectIndex = index;",
                    "",
                    "storageConstants.poolContextMenu.showAt(position);"
                ],
                "name": "beforeitemcontextmenu",
                "scope": "me"
            },
            "designerId": "13c55f44-e516-428b-a5a8-ffe74e3a280e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#ClusterServersGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onServerGridpanelBeforeItemContextMenu",
                "implHandler": [
                    "var position = e.getXY();",
                    "e.stopEvent();",
                    "",
                    "storageConstants.selectRow = record;",
                    "storageConstants.selectIndex = index;",
                    "",
                    "storageConstants.serverContextMenu.showAt(position);"
                ],
                "name": "beforeitemcontextmenu",
                "scope": "me"
            },
            "designerId": "18b43a27-fe71-430d-b679-316861915893"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#OsdDevicePathGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onPathGridpanelBeforeItemContextMenu",
                "implHandler": [
                    "var position = e.getXY();",
                    "e.stopEvent();",
                    "",
                    "storageConstants.selectRow = record;",
                    "storageConstants.selectIndex = index;",
                    "",
                    "storageConstants.pathContextMenu.showAt(position);"
                ],
                "name": "beforeitemcontextmenu",
                "scope": "me"
            },
            "designerId": "b6ebb589-000a-4538-ba94-b2dab3855113"
        }
    ]
}