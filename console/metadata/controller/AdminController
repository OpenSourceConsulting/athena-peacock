{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "AdminController"
    },
    "designerId": "95851f8a-909a-42c8-9fab-b107e59de51f",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#searchUserName",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onSearchUserNameKeydown",
                "implHandler": [
                    "//User Name Search",
                    "if(e.getKey() == e.ENTER){",
                    "    this.searchUser();",
                    "}"
                ],
                "name": "keydown",
                "scope": "me"
            },
            "designerId": "92d21db4-4c6f-481d-a8b3-3bcb3f424260"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "init"
                ],
                "fn": "searchUser",
                "implHandler": [
                    "//User Grid Data Search",
                    "",
                    "if(init) {",
                    "",
                    "    Ext.getCmp(\"searchUserName\").setValue(\"\");",
                    "    Ext.getCmp(\"userGrid\").reconfigure(Ext.getCmp(\"userGrid\").store, Ext.getCmp(\"userGrid\").initialConfig.columns);",
                    "",
                    "}",
                    "",
                    "userConstants.selectRow = null;",
                    "",
                    "Ext.getCmp(\"userGrid\").getStore().load({",
                    "    params:{",
                    "        search : Ext.getCmp(\"searchUserName\").getRawValue()",
                    "    }",
                    "});",
                    "",
                    "var detailPanel = Ext.getCmp(\"userDetailPanel\");",
                    "detailPanel.layout.setActiveItem(0);"
                ]
            },
            "designerId": "2f70fe96-8006-453d-b9d5-917fcd72cf10"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "init"
                ],
                "fn": "searchUserPermission",
                "implHandler": [
                    "//User Grid Data Search",
                    "",
                    "if(init) {",
                    "",
                    "    Ext.getCmp(\"searchUserPermissionName\").setValue(\"\");",
                    "    Ext.getCmp(\"userPermissionGrid\").reconfigure(Ext.getCmp(\"userPermissionGrid\").store, Ext.getCmp(\"userPermissionGrid\").initialConfig.columns);",
                    "",
                    "}",
                    "",
                    "userConstants.selectRow = null;",
                    "",
                    "Ext.getCmp(\"userPermissionGrid\").getStore().load({",
                    "    params:{",
                    "        search : Ext.getCmp(\"searchUserPermissionName\").getRawValue()",
                    "    }",
                    "});",
                    "",
                    "var detailPanel = Ext.getCmp(\"userPermissionDetailPanel\");",
                    "detailPanel.layout.setActiveItem(0);"
                ]
            },
            "designerId": "da970b98-d323-43f7-80b5-89a6fd34c30f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onUserGridSelect",
                "implHandler": [
                    "//User Grid Item Click",
                    "if(cellIndex > 5) {",
                    "    //Action Column 예외처리",
                    "    return;",
                    "}",
                    "",
                    "if(userConstants.selectRow == null || userConstants.selectRow.get(\"userId\") != record.get(\"userId\")) {",
                    "",
                    "    userConstants.selectRow = record;",
                    "",
                    "    this.searchUserDetail();",
                    "}"
                ],
                "name": "cellclick",
                "scope": "me"
            },
            "designerId": "8c5e10f9-065e-4797-b348-b74ca817968b"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "//User Menu Config Setting",
                    "",
                    "var user = this;",
                    "",
                    "var userGridContextMenu = new Ext.menu.Menu({",
                    "    items:",
                    "    [",
                    "        { text: 'Edit',",
                    "         handler: function() {",
                    "             user.showUserWindow('edit');",
                    "         }",
                    "        },",
                    "        { text: 'Delete',",
                    "         handler: function() {",
                    "             user.deleteUser();",
                    "         }",
                    "        }",
                    "    ]",
                    "",
                    "});",
                    "",
                    "//User Menu Constants",
                    "Ext.define('userConstants', {",
                    "    singleton: true,",
                    "    me : user,",
                    "    contextMenu: userGridContextMenu,",
                    "    selectRow : null,",
                    "    actionRow : null",
                    "});",
                    ""
                ]
            },
            "designerId": "6f2da724-5241-4bb2-8e1d-17a8130030b2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onUserGridBeforeItemContextMenu",
                "implHandler": [
                    "//User Grid Right Click Menu 호출",
                    "",
                    "var position = e.getXY();",
                    "e.stopEvent();",
                    "",
                    "userConstants.actionRow = record;",
                    "",
                    "userConstants.contextMenu.showAt(position);"
                ],
                "name": "beforeitemcontextmenu",
                "scope": "me"
            },
            "designerId": "acc14fb9-a51d-4d28-b5c4-c4f0cad7befa"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "type, user_id"
                ],
                "fn": "showUserWindow",
                "implHandler": [
                    "",
                    "//User Popup 호출",
                    "",
                    "var userWindow = Ext.create(\"widget.userWindow\");",
                    "",
                    "userWindow.show();",
                    "",
                    "if(type != 'new') {",
                    "",
                    "    userWindow.setTitle(\"Edit User\");",
                    "",
                    "    if(user_id == null) {",
                    "        user_id = userConstants.actionRow.get(\"userId\");",
                    "    }",
                    "",
                    "    var userForm = Ext.getCmp(\"userForm\");",
                    "",
                    "    userForm.getForm().waitMsgTarget = userForm.getEl();",
                    "",
                    "    userForm.getForm().load({",
                    "        params : {",
                    "            userId : user_id",
                    "        }",
                    "        ,url : GLOBAL.urlPrefix + \"user/getUser\"",
                    "        ,waitMsg:'Loading...'",
                    "        ,success: function(form, action) {",
                    "",
                    "            var password = form.findField('passwd').getValue();",
                    "",
                    "            form.findField('confirmPasswd').setRawValue(password);",
                    "            form.findField('editType').setRawValue(type);",
                    "        }",
                    "    });",
                    "}",
                    "",
                    ""
                ]
            },
            "designerId": "d7295575-fbff-477e-ae28-e52002e33a2f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteUser",
                "implHandler": [
                    "",
                    "//User 삭제",
                    "",
                    "Ext.MessageBox.confirm('Confirm', '삭제 하시겠습니까?', function(btn){",
                    "",
                    "    if(btn == \"yes\"){",
                    "",
                    "        Ext.Ajax.request({",
                    "            url: GLOBAL.urlPrefix + \"user/delete\",",
                    "            params : {",
                    "                userId : userConstants.actionRow.get(\"userId\")",
                    "            },",
                    "            disableCaching : true,",
                    "            waitMsg: 'Delete User...',",
                    "            success: function(response){",
                    "                var msg = Ext.JSON.decode(response.responseText).msg;",
                    "                Ext.MessageBox.alert('알림', msg);",
                    "",
                    "                userConstants.selectRow = null;",
                    "",
                    "                Ext.getCmp(\"userGrid\").getStore().reload();",
                    "                Ext.getCmp(\"userDetailPanel\").layout.setActiveItem(0);",
                    "",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "designerId": "aad8d0ee-a7f9-4c63-9379-0287e432c82c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteUserPermission",
                "implHandler": [
                    "",
                    "//User Permission 삭제",
                    "",
                    "Ext.MessageBox.confirm('Confirm', '삭제 하시겠습니까?', function(btn){",
                    "",
                    "    if(btn == \"yes\"){",
                    "",
                    "        Ext.Ajax.request({",
                    "            url: GLOBAL.urlPrefix + \"permission/delete\",",
                    "            params : {",
                    "                permId : userConstants.actionRow.get(\"permId\")",
                    "            },",
                    "            disableCaching : true,",
                    "            waitMsg: 'Delete User Permission...',",
                    "            success: function(response){",
                    "                var msg = Ext.JSON.decode(response.responseText).msg;",
                    "                Ext.MessageBox.alert('알림', msg);",
                    "",
                    "                userConstants.selectRow = null;",
                    "",
                    "                Ext.getCmp(\"userPermissionGrid\").getStore().reload();",
                    "                Ext.getCmp(\"userPermissionDetailPanel\").layout.setActiveItem(0);",
                    "",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "designerId": "def2f568-d1b1-4f1b-b059-8071f679a228"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "searchUserDetail",
                "implHandler": [
                    "",
                    "//User 상세 조회",
                    "",
                    "var userDetailPanel = Ext.getCmp(\"userDetailPanel\");",
                    "userDetailPanel.layout.setActiveItem(1);",
                    "",
                    "//User Data Loading",
                    "",
                    "var userForm = Ext.getCmp(\"getUserForm\");",
                    "",
                    "userForm.getForm().reset();",
                    "",
                    "userForm.getForm().waitMsgTarget = userForm.getEl();",
                    "",
                    "userForm.getForm().load({",
                    "    params : {",
                    "        userId : userConstants.selectRow.get(\"userId\")",
                    "    }",
                    "    ,url : GLOBAL.urlPrefix + \"user/getUser\"",
                    "    ,waitMsg:'Loading...'",
                    "});",
                    "",
                    "Ext.getCmp(\"userTitleLabel\").setText(\"<h2>&nbsp;&nbsp;&nbsp;\"+userConstants.selectRow.get(\"userName\")+\"</h2>\", false);"
                ]
            },
            "designerId": "56047308-051c-4d87-ab38-6a58f8bb2ead"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#adminTabPanel",
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onAdminTabPanelTabChange",
                "implHandler": [
                    "if(newCard.title == \"User\"){",
                    "",
                    "    this.searchUser(true);",
                    "",
                    "} else {",
                    "",
                    "    this.searchUserPermission(true);",
                    "",
                    "}"
                ],
                "name": "tabchange",
                "scope": "me"
            },
            "designerId": "daaf2361-e54b-4d2a-b379-c6086ca2a4ff"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userPermissionGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onUserPermissionGridCellClick",
                "implHandler": [
                    "//User Grid Item Click",
                    "if(cellIndex > 3) {",
                    "    //Action Column 예외처리",
                    "    return;",
                    "}",
                    "",
                    "if(userConstants.selectRow == null || userConstants.selectRow.get(\"permId\") != record.get(\"permId\")) {",
                    "",
                    "    //User 상세 조회",
                    "",
                    "    var detailPanel = Ext.getCmp(\"userPermissionDetailPanel\");",
                    "    detailPanel.layout.setActiveItem(1);",
                    "",
                    "    //User Data Loading",
                    "",
                    "    Ext.getCmp(\"permissionMenuTreeGrid\").bindStore(Ext.getStore(\"permissionMenuTreeStore\"));",
                    "    Ext.getCmp(\"permissionMenuTreeGrid\").getStore().load({",
                    "        params:{",
                    "            permId : record.get(\"permId\")",
                    "        }",
                    "    });",
                    "",
                    "}"
                ],
                "name": "cellclick",
                "scope": "me"
            },
            "designerId": "c79c7448-c55c-4a4e-904e-36b962224096"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "grid",
                    "field"
                ],
                "fn": "changeMenuAuth",
                "implHandler": [
                    "var view = grid.getView(),",
                    "    node = view.getNode(rowIndex),",
                    "    record = view.getRecord(node),",
                    "    thread = record.get('thread');",
                    "",
                    "",
                    "var allRecords = grid.getRecords();",
                    "",
                    "if(thread.length == 2) {",
                    "    ",
                    "    Ext.each(allRecords, function (rec) {",
                    "       ",
                    "        if(rec.get('thread').substring(0,2) == thread) {",
                    "            rec.set(field, checked);",
                    "        }",
                    "    });",
                    "",
                    "    ",
                    "} else {",
                    "    ",
                    "    var thread = thread.substring(0, 2);",
                    "    var changeCheck = checked;",
                    "    Ext.each(allRecords, function (rec) {",
                    "        ",
                    "        if( rec.get('thread').length > 2 &&  rec.get('thread').substring(0,2) == thread ) {",
                    "            ",
                    "            if(rec.get(field) == true){",
                    "                changeCheck = true;",
                    "            }",
                    "            ",
                    "        }",
                    "       ",
                    "    });",
                    "    ",
                    "    Ext.each(allRecords, function (rec) {",
                    "        ",
                    "        if( rec.get('thread') == thread ) {",
                    "            rec.set(field, changeCheck);",
                    "        }",
                    "        ",
                    "    }); ",
                    "    ",
                    "}",
                    ""
                ]
            },
            "designerId": "64a8bfea-3d45-4e76-8a3b-be0a5b852762"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#searchUserPermissionName",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onSearchUserPermissionNameKeydown",
                "implHandler": [
                    "//User Name Search",
                    "if(e.getKey() == e.ENTER){",
                    "    this.searchUserPermission();",
                    "}"
                ],
                "name": "keydown",
                "scope": "me"
            },
            "designerId": "4c5429bd-7136-4d7f-b8c2-a27a05fff838"
        }
    ]
}