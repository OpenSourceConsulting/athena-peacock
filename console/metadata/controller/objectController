{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "objectController",
        "id": "objectController"
    },
    "designerId": "dcfc3460-e75e-40ed-b8d6-7fdbaa988473",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#objectBucketsGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onObjectBucketsGridpanelCellClick",
                "implHandler": [
                    "objectConstants.selectRow = record;",
                    "objectConstants.selectIndex = rowIndex;",
                    "",
                    "var gNm = record.get('name');",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + 'ceph/object/bucket?name=' + gNm,",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "        Ext.getCmp(\"objectBucketsDetail1\").update(data.data);",
                    "        Ext.getCmp(\"objectBucketsDetail2\").update(data.data.logging);",
                    "",
                    "        Ext.getCmp(\"objectBucketsDetail\").expand();",
                    "    }",
                    "});",
                    ""
                ],
                "name": "cellclick",
                "scope": "me"
            },
            "designerId": "d0d8f767-32b0-483a-902b-c5cbc5dc3365"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setObjectBucketsData",
                "implHandler": [
                    "Ext.getCmp('objectBucketsGrid').getStore().load();",
                    ""
                ]
            },
            "designerId": "7561efad-b10b-4fb5-8c30-6b28cce786c1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createObjectBucket",
                "implHandler": [
                    "//Create Bucket Execute",
                    "",
                    "var myForm = Ext.getCmp(\"createBucketFormPanel\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "",
                    "var values = myForm.getValues();",
                    "",
                    "var nameField = myForm.getForm().findField(\"createBucketName\");",
                    "var name = nameField.getValue();",
                    "",
                    "if (name !== '') {",
                    "    var myGrid = Ext.getCmp(\"objectBucketsGrid\");",
                    "    var myStore = myGrid.getStore();",
                    "    var myName = '';",
                    "",
                    "    for (var i = 0; i < myStore.count(); i++) {",
                    "        myName = myStore.getAt(i).get('name');",
                    "        if (myName == name) {",
                    "            alert('Bucket name(' + name + ') already exist.');",
                    "            nameField.focus();",
                    "            return;",
                    "        }",
                    "    }",
                    "",
                    "    Ext.Ajax.request({",
                    "        url: GLOBAL.urlPrefix + \"ceph/object/bucket\",",
                    "        method: 'POST',",
                    "        params: values,",
                    "        success: function(response){",
                    "            var data = Ext.decode(response.responseText);",
                    "",
                    "            objectConstants.me.setObjectBucketsData();",
                    "        },",
                    "        failure: function(response){",
                    "            var data = Ext.decode(response.responseText);",
                    "",
                    "            Ext.Msg.show({",
                    "                title:'Error',",
                    "                msg: 'Error on Create Bucket.',",
                    "                buttons: Ext.Msg.OK,",
                    "                icon: Ext.Msg.ERROR",
                    "            });",
                    "        }",
                    "    });",
                    "}",
                    "",
                    "myForm.up('window').close();",
                    ""
                ]
            },
            "designerId": "7736c1c1-c45e-4aca-9937-6ca5999f982a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteObjectBucket",
                "implHandler": [
                    "var name = objectConstants.selectRow.get('name');",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Delete selected Bucket?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            Ext.Ajax.request({",
                    "                url: GLOBAL.urlPrefix + \"ceph/object/bucket/delete\",",
                    "                method: 'POST',",
                    "                params:{'bucketName':name},",
                    "                success: function(response){",
                    "                    var data = Ext.decode(response.responseText);",
                    "                    objectConstants.me.setObjectBucketsData();",
                    "                },",
                    "                failure: function(response){",
                    "                    var data = Ext.decode(response.responseText);",
                    "",
                    "                    Ext.Msg.show({",
                    "                        title:'Error',",
                    "                        msg: 'Error on Delete Bucket.',",
                    "                        buttons: Ext.Msg.OK,",
                    "                        icon: Ext.Msg.ERROR",
                    "                    });",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "b308314b-08f9-4ab6-8d3e-452aaff3f4a4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "emptyObjectBucket",
                "implHandler": [
                    "var name = objectConstants.selectRow.get('name');",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Empty selected Bucket?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            Ext.Ajax.request({",
                    "                url: GLOBAL.urlPrefix + \"ceph/object/bucket?bucketName=\" + name,",
                    "                method: 'PUT',",
                    "                success: function(response){",
                    "                    var data = Ext.decode(response.responseText);",
                    "",
                    "                    Ext.Msg.show({",
                    "                        title:'Information',",
                    "                        msg: 'Empty Bucket success.',",
                    "                        buttons: Ext.Msg.OK,",
                    "                        icon: Ext.Msg.INFO",
                    "                    });",
                    "                },",
                    "                failure: function(response){",
                    "                    var data = Ext.decode(response.responseText);",
                    "",
                    "                    Ext.Msg.show({",
                    "                        title:'Error',",
                    "                        msg: 'Error on Empty Bucket.',",
                    "                        buttons: Ext.Msg.OK,",
                    "                        icon: Ext.Msg.ERROR",
                    "                    });",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "b26b17aa-2e8c-4d87-90fc-cb23e05ba44b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setObjectFilesData",
                "implHandler": [
                    "var store = Ext.getCmp('objectFilesGrid').getStore();",
                    "",
                    "if (objectConstants.currentFolder !== '') {",
                    "    store.getProxy().extraParams = {",
                    "        bucketName : objectConstants.currentBucket,",
                    "        parentPath : objectConstants.currentFolder",
                    "    };",
                    "} else {",
                    "    store.getProxy().extraParams = {",
                    "        bucketName : objectConstants.currentBucket",
                    "    };",
                    "}",
                    "store.load();",
                    "",
                    "var toolBar = Ext.getCmp('objectFilesTopAddrToolbar');",
                    "",
                    "toolBar.removeAll();",
                    "var button = {",
                    "    xtype: 'button',",
                    "    id: 'filesAllBuckets',",
                    "    itemId: 'filesAllBuckets',",
                    "    style: {",
                    "        color: '#66f'",
                    "    },",
                    "    width: 100,",
                    "    text: 'All Buckets'",
                    "};",
                    "Ext.getCmp('objectFilesTopAddrToolbar').add(button);",
                    "",
                    "objectConstants.me.addFilesFolderButton(objectConstants.currentBucket, '');",
                    "",
                    "if (objectConstants.currentFolder !== '') {",
                    "    var key='';",
                    "    var splitKey = objectConstants.currentFolder.split('/');",
                    "",
                    "    var i_count = splitKey.length;",
                    "    if (splitKey[splitKey.length - 1] === '') {",
                    "        i_count -= 1;",
                    "    }",
                    "",
                    "    var i_width = Ext.getCmp('objectFilesTopAddrToolbar').getWidth();",
                    "    var i_max = (i_count * 130) + 250;",
                    "    var i_start = 0;",
                    "    if (i_max > i_width) {",
                    "        i_start = Math.floor((i_max - i_width - 1) / 130) + 1;",
                    "        if (i_start >= i_count) {",
                    "            i_start = i_count - 1;",
                    "        }",
                    "",
                    "        if (i_start > 0) {",
                    "            Ext.getCmp('objectFilesTopAddrToolbar').add('>');",
                    "            Ext.getCmp('objectFilesTopAddrToolbar').add('...');",
                    "        }",
                    "    }",
                    "",
                    "    for (var i = 0; i < i_start; i++) {",
                    "        key += splitKey[i] + '/';",
                    "    }",
                    "    for (var i = i_start; i < splitKey.length; i++) {",
                    "        key += splitKey[i] + '/';",
                    "        if (splitKey[i] !== '') {",
                    "            objectConstants.me.addFilesFolderButton(splitKey[i], key);",
                    "        }",
                    "    }",
                    "}",
                    "",
                    "Ext.getCmp(\"objectFilesDetail1\").update(null);",
                    "Ext.getCmp(\"objectFilesDetail2\").update(null);",
                    "Ext.getCmp(\"objectFilesDetail\").collapse();",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "391ed299-7273-4df4-9f9a-147f25698119"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createObjectFolder",
                "implHandler": [
                    "//Add Popup 호출",
                    "",
                    "var AddWindow = Ext.create('widget.createFolderWindow');",
                    "AddWindow.title = 'Create Folder';",
                    "AddWindow.show();",
                    "",
                    "var myForm = Ext.getCmp(\"createFolderFormPanel\");",
                    "myForm.getForm().findField(\"createFolderName\").focus();",
                    ""
                ]
            },
            "designerId": "0c6b1123-58ad-4a06-997c-ed2dbda178c0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "uploadFileClick",
                "implHandler": [
                    "//Upload Popup 호출",
                    "",
                    "var AddWindow = Ext.create('widget.uploadFileWindow');",
                    "AddWindow.title = 'Upload';",
                    "AddWindow.show();",
                    "",
                    ""
                ]
            },
            "designerId": "dbabdb8e-797a-4b53-93b5-637a06b2ce61"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "renameFileClick",
                "implHandler": [
                    "//Rename Popup 호출",
                    "",
                    "var name = objectConstants.selectFilesRow.get('objectName');",
                    "var folder = objectConstants.selectFilesRow.get('folder');",
                    "",
                    "if (folder !== true) {",
                    "    var AddWindow = Ext.create('widget.renameFileWindow');",
                    "    AddWindow.title = 'Rename';",
                    "",
                    "    var myForm = Ext.getCmp(\"renameFileFormPanel\");",
                    "    var nameField = myForm.getForm().findField(\"renameFileName\");",
                    "",
                    "    nameField.setValue(name);",
                    "    AddWindow.show();",
                    "}",
                    ""
                ]
            },
            "designerId": "c8b87ec3-82f5-418d-8539-f10f8bc50084"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openObjectFile",
                "implHandler": [
                    "var key = objectConstants.selectFilesRow.get('key');",
                    "var folder = objectConstants.selectFilesRow.get('folder');",
                    "",
                    "if (folder === true) {",
                    "    objectConstants.currentFolder = key;",
                    "    objectConstants.me.setObjectFilesData();",
                    "}",
                    ""
                ]
            },
            "designerId": "e0c074a1-a43f-430f-8390-14430cf3f0a5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "downloadObjectFile",
                "implHandler": [
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Download selected files?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            var selections = Ext.getCmp('objectFilesGrid').selModel.getSelection();",
                    "            var idx = 0;",
                    "",
                    "            Ext.each(selections, function(recs){",
                    "                if (recs.get('folder') !== true) {",
                    "                    var key = recs.get('key');",
                    "",
                    "                    Ext.Ajax.request({",
                    "                        url: GLOBAL.urlPrefix + 'ceph/object/object?bucketName='+objectConstants.currentBucket + '&key='+key,",
                    "                        disableCaching : true,",
                    "                        success: function(response){",
                    "                            var data = Ext.decode(response.responseText);",
                    "",
                    "                            Ext.DomHelper.append(document.body, {",
                    "                                tag: 'iframe',",
                    "                                id : 'downloadIframe' + idx,",
                    "                                frameBorder: 0,",
                    "                                width: 0,",
                    "                                height: 0,",
                    "                                css: 'display:none;visibility:hidden;height:0px;',",
                    "                                src: data.data.url",
                    "                            });",
                    "                        }",
                    "                    });",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "d076dd2d-5767-4db6-851e-db0d7423f9e7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createfolderObjectFile",
                "implHandler": [
                    "//Create Folder Execute",
                    "",
                    "var myForm = Ext.getCmp(\"createFolderFormPanel\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "",
                    "myForm.getForm().findField(\"createFolderBucket\").setValue(objectConstants.currentBucket);",
                    "myForm.getForm().findField(\"createFolderParent\").setValue(objectConstants.currentFolder);",
                    "",
                    "var values = myForm.getValues();",
                    "",
                    "var nameField = myForm.getForm().findField(\"createFolderName\");",
                    "var name = nameField.getValue() + '/';",
                    "",
                    "if (name !== '') {",
                    "    var myGrid = Ext.getCmp(\"objectFilesGrid\");",
                    "    var myStore = myGrid.getStore();",
                    "    var myName = '';",
                    "",
                    "    for (var i = 0; i < myStore.count(); i++) {",
                    "        myName = myStore.getAt(i).get('objectName');",
                    "        if (myName == name) {",
                    "            alert('Folder name(' + name + ') already exist.');",
                    "            nameField.focus();",
                    "            return;",
                    "        }",
                    "    }",
                    "",
                    "    Ext.Ajax.request({",
                    "        url: GLOBAL.urlPrefix + \"ceph/object/folder\",",
                    "        method: 'POST',",
                    "        params: values,",
                    "        success: function(response){",
                    "            var data = Ext.decode(response.responseText);",
                    "",
                    "            objectConstants.me.setObjectFilesData();",
                    "        },",
                    "        failure: function(response){",
                    "            var data = Ext.decode(response.responseText);",
                    "",
                    "            Ext.Msg.show({",
                    "                title:'Error',",
                    "                msg: 'Error on Create Folder.',",
                    "                buttons: Ext.Msg.OK,",
                    "                icon: Ext.Msg.ERROR",
                    "            });",
                    "        }",
                    "    });",
                    "}",
                    "",
                    "myForm.up('window').close();",
                    ""
                ]
            },
            "designerId": "10a6e200-03e7-4547-bde4-e9a09a46562f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "makepublicObjectFile",
                "implHandler": [
                    "var selections = Ext.getCmp('objectFilesGrid').selModel.getSelection();",
                    "Ext.each(selections, function(recs){",
                    "    //Ext.getCmp('objectFilesGrid').getStore().remove(recs);",
                    "});",
                    "",
                    "var bucketName = objectConstants.currentBucket;",
                    "var key = '';",
                    "var permission = 'public-read-write';  //private | public-read | public-read-write | authenticated-read | bucket-owner-read | bucket-owner-full-control",
                    "var pars = null;",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Make to Public Objects?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            var selections = Ext.getCmp('objectFilesGrid').selModel.getSelection();",
                    "            Ext.each(selections, function(recs){",
                    "                key = recs.get('key');",
                    "",
                    "                pars = { 'bucketName':bucketName, 'key':key, 'permission' : permission };",
                    "",
                    "                Ext.Ajax.request({",
                    "                    url: GLOBAL.urlPrefix + \"ceph/object/object\",",
                    "                    method: 'PUT',",
                    "                    jsonData: pars,",
                    "                    success: function(response){",
                    "                        var data = Ext.decode(response.responseText);",
                    "                        objectConstants.me.setObjectFilesData();",
                    "                    },",
                    "                    failure: function(response){",
                    "                        var data = Ext.decode(response.responseText);",
                    "                        Ext.Msg.show({",
                    "                            title:'Error',",
                    "                            msg: 'Error on Make Public Object. (' + key + ')',",
                    "                            buttons: Ext.Msg.OK,",
                    "                            icon: Ext.Msg.ERROR",
                    "                        });",
                    "                    }",
                    "                });",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "b085fded-9baf-4513-81d4-e5e310ae520c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "makeprotectedObjectFile",
                "implHandler": [
                    "var selections = Ext.getCmp('objectFilesGrid').selModel.getSelection();",
                    "Ext.each(selections, function(recs){",
                    "    //Ext.getCmp('objectFilesGrid').getStore().remove(recs);",
                    "});",
                    "",
                    "var bucketName = objectConstants.currentBucket;",
                    "var key = '';",
                    "var permission = 'private';  //private | public-read | public-read-write | authenticated-read | bucket-owner-read | bucket-owner-full-control",
                    "var pars = null;",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Make to Protected Objects?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            var selections = Ext.getCmp('objectFilesGrid').selModel.getSelection();",
                    "            Ext.each(selections, function(recs){",
                    "                key = recs.get('key');",
                    "",
                    "                pars = { 'bucketName':bucketName, 'key':key, 'permission' : permission };",
                    "",
                    "                Ext.Ajax.request({",
                    "                    url: GLOBAL.urlPrefix + \"ceph/object/object\",",
                    "                    method: 'PUT',",
                    "                    jsonData: pars,",
                    "                    success: function(response){",
                    "                        var data = Ext.decode(response.responseText);",
                    "                        objectConstants.me.setObjectFilesData();",
                    "                    },",
                    "                    failure: function(response){",
                    "                        var data = Ext.decode(response.responseText);",
                    "                        Ext.Msg.show({",
                    "                            title:'Error',",
                    "                            msg: 'Error on Make Public Object. (' + key + ')',",
                    "                            buttons: Ext.Msg.OK,",
                    "                            icon: Ext.Msg.ERROR",
                    "                        });",
                    "                    }",
                    "                });",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "d6e8f9af-4571-4c80-9abd-ea3ee789f109"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "renameObjectFile",
                "implHandler": [
                    "//Rename File Execute",
                    "",
                    "var objectName = objectConstants.selectFilesRow.get('objectName');",
                    "var values = null;",
                    "",
                    "var myForm = Ext.getCmp(\"renameFileFormPanel\");",
                    "if (myForm.getForm().isValid() !== true) {",
                    "    return;",
                    "}",
                    "",
                    "var nameField = myForm.getForm().findField(\"renameFileName\");",
                    "var newName = nameField.getValue();",
                    "",
                    "if (newName !== objectName) {",
                    "    var myGrid = Ext.getCmp(\"objectFilesGrid\");",
                    "    var myStore = myGrid.getStore();",
                    "    var myName = '';",
                    "",
                    "    for (var i = 0; i < myStore.count(); i++) {",
                    "        myName = myStore.getAt(i).get('objectName');",
                    "        if (myName == newName) {",
                    "            alert('Object name(' + newName + ') already exist.');",
                    "            nameField.focus();",
                    "            return;",
                    "        }",
                    "    }",
                    "",
                    "    myForm.getForm().findField(\"renameKey\").setValue(objectConstants.currentFolder + objectName);",
                    "    myForm.getForm().findField(\"renameObjectName\").setValue(objectName);",
                    "    myForm.getForm().findField(\"renameBucketName\").setValue(objectConstants.currentBucket);",
                    "    values = myForm.getValues();",
                    "",
                    "    Ext.Ajax.request({",
                    "        url: GLOBAL.urlPrefix + \"ceph/object/object\",",
                    "        method: 'PUT',",
                    "        jsonData: values,",
                    "        success: function(response){",
                    "            var data = Ext.decode(response.responseText);",
                    "            objectConstants.me.setObjectFilesData();",
                    "",
                    "            // Empty Selections",
                    "            objectConstants.filesSelectBucket = '';",
                    "            objectConstants.filesSelectList = null;",
                    "",
                    "            Ext.getCmp(\"filesPasteMenuItem\").disable();",
                    "            Ext.getCmp(\"filesPasteMenu\").disable();",
                    "        },",
                    "        failure: function(response){",
                    "            var data = Ext.decode(response.responseText);",
                    "",
                    "            Ext.Msg.show({",
                    "                title:'Error',",
                    "                msg: 'Error on Rename Object.',",
                    "                buttons: Ext.Msg.OK,",
                    "                icon: Ext.Msg.ERROR",
                    "            });",
                    "        }",
                    "    });",
                    "",
                    "    myForm.up('window').close();",
                    "} else {",
                    "    nameField.focus();",
                    "}",
                    ""
                ]
            },
            "designerId": "69fa34cc-80d6-49df-86af-89e278a5d2fd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteObjectFile",
                "implHandler": [
                    "var bucketName = objectConstants.currentBucket;",
                    "var key = '';",
                    "var isFolder = false;",
                    "var pars = '';",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: 'Delete selected Objects?',",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            var selections = Ext.getCmp('objectFilesGrid').selModel.getSelection();",
                    "            Ext.each(selections, function(recs){",
                    "                key = recs.get('key');",
                    "                isFolder = recs.get('folder');",
                    "",
                    "                pars = 'bucketName=' + bucketName + '&' + 'key=' + key + '&' + 'isFolder=' + isFolder;",
                    "",
                    "                Ext.Ajax.request({",
                    "                    url: GLOBAL.urlPrefix + \"ceph/object/object/delete?\" + pars,",
                    "                    success: function(response){",
                    "                        var data = Ext.decode(response.responseText);",
                    "                        objectConstants.me.setObjectFilesData();",
                    "                    },",
                    "                    failure: function(response){",
                    "                        var data = Ext.decode(response.responseText);",
                    "                        Ext.Msg.show({",
                    "                            title:'Error',",
                    "                            msg: 'Error on Delete Object. (' + key + ')',",
                    "                            buttons: Ext.Msg.OK,",
                    "                            icon: Ext.Msg.ERROR",
                    "                        });",
                    "                    }",
                    "                });",
                    "            });",
                    "",
                    "            // Empty Selections",
                    "            objectConstants.filesSelectBucket = '';",
                    "            objectConstants.filesSelectList = null;",
                    "",
                    "            Ext.getCmp(\"filesPasteMenuItem\").disable();",
                    "            Ext.getCmp(\"filesPasteMenu\").disable();",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "007f0efe-a224-4706-88fd-859c2c9bc03f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "cutObjectFile",
                "implHandler": [
                    "objectConstants.filesSelectMode = 'cut';",
                    "objectConstants.filesSelectBucket = objectConstants.currentBucket;",
                    "objectConstants.filesSelectList = Ext.getCmp('objectFilesGrid').selModel.getSelection();",
                    ""
                ]
            },
            "designerId": "f0261d04-5e42-440f-877e-b2e692609f27"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "copyObjectFile",
                "implHandler": [
                    "objectConstants.filesSelectMode = 'copy';",
                    "objectConstants.filesSelectBucket = objectConstants.currentBucket;",
                    "objectConstants.filesSelectList = Ext.getCmp('objectFilesGrid').selModel.getSelection();",
                    ""
                ]
            },
            "designerId": "91b7756b-b05b-4b22-bbbf-424972d7a090"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "pasteObjectFile",
                "implHandler": [
                    "var values = null;",
                    "var url = 'ceph/object/';",
                    "var msg = 'Paste ';",
                    "if (objectConstants.filesSelectMode == 'cut') {",
                    "    msg += 'cutted Objects?';",
                    "    url += 'move';",
                    "} else {",
                    "    msg += 'coppied Objects?';",
                    "    url += 'copy';",
                    "}",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Confirm',",
                    "    msg: msg,",
                    "    buttons: Ext.Msg.OKCANCEL,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(btn) {",
                    "        if (btn === 'ok') {",
                    "            Ext.each(objectConstants.filesSelectList, function(recs){",
                    "                if (recs.get('folder') !== true) {",
                    "                    values = {",
                    "                        'bucketName':objectConstants.filesSelectBucket,",
                    "                        'key':recs.get('key'),",
                    "                        'objectName':recs.get('objectName'),",
                    "                        'targetBucketName':objectConstants.currentBucket,",
                    "                        'parentPath':objectConstants.currentFolder",
                    "                    };",
                    "",
                    "                    Ext.Ajax.request({",
                    "                        url: GLOBAL.urlPrefix + url,",
                    "                        method: 'POST',",
                    "                        jsonData: values,",
                    "                        success: function(response){",
                    "                            var data = Ext.decode(response.responseText);",
                    "                            objectConstants.me.setObjectFilesData();",
                    "                        },",
                    "                        failure: function(response){",
                    "                            var data = Ext.decode(response.responseText);",
                    "                            Ext.Msg.show({",
                    "                                title:'Error',",
                    "                                msg: 'Error on Coping(Moving) Objects.',",
                    "                                buttons: Ext.Msg.OK,",
                    "                                icon: Ext.Msg.ERROR",
                    "                            });",
                    "                        }",
                    "                    });",
                    "                }",
                    "            });",
                    "",
                    "            if (objectConstants.filesSelectMode == 'cut') {",
                    "                objectConstants.filesSelectBucket = '';",
                    "                objectConstants.filesSelectList = null;",
                    "",
                    "                Ext.getCmp(\"filesPasteMenuItem\").disable();",
                    "                Ext.getCmp(\"filesPasteMenu\").disable();",
                    "            }",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "db674dda-32d6-4493-bb58-c9e7f26ee474"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "name, key"
                ],
                "fn": "addFilesFolderButton",
                "implHandler": [
                    "var button = {",
                    "    xtype : 'button',",
                    "    text : name,",
                    "    width : 100,",
                    "    style: {",
                    "        color: '#66f'",
                    "    },",
                    "    listeners : {",
                    "        click : function(){",
                    "            objectConstants.currentFolder = key;",
                    "            objectConstants.me.setObjectFilesData();",
                    "        }",
                    "    }",
                    "};",
                    "",
                    "Ext.getCmp('objectFilesTopAddrToolbar').add('>');",
                    "Ext.getCmp('objectFilesTopAddrToolbar').add(button);"
                ]
            },
            "designerId": "8b468a52-845f-4748-af0b-1f8275f03839"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record"
                ],
                "fn": "setFilesMenuEnable",
                "implHandler": [
                    "var folder = record.get('folder');",
                    "if (folder === true) {",
                    "    Ext.getCmp(\"filesOpenMenuItem\").enable();",
                    "    Ext.getCmp(\"filesDownloadMenuItem\").disable();",
                    "    Ext.getCmp(\"filesRenameMenuItem\").disable();",
                    "",
                    "    Ext.getCmp(\"filesOpenMenu\").enable();",
                    "    Ext.getCmp(\"filesDownloadMenu\").disable();",
                    "    Ext.getCmp(\"filesRenameMenu\").disable();",
                    "} else {",
                    "    Ext.getCmp(\"filesOpenMenuItem\").disable();",
                    "    Ext.getCmp(\"filesDownloadMenuItem\").enable();",
                    "    Ext.getCmp(\"filesRenameMenuItem\").enable();",
                    "",
                    "    Ext.getCmp(\"filesOpenMenu\").disable();",
                    "    Ext.getCmp(\"filesDownloadMenu\").enable();",
                    "    Ext.getCmp(\"filesRenameMenu\").enable();",
                    "}",
                    "",
                    "var cnt = Ext.getCmp('objectFilesGrid').selModel.getSelection().length;",
                    "if (cnt > 0) {",
                    "    Ext.getCmp(\"filesPasteMenuItem\").enable();",
                    "    Ext.getCmp(\"filesPasteMenu\").enable();",
                    "} else {",
                    "    Ext.getCmp(\"filesPasteMenuItem\").disable();",
                    "    Ext.getCmp(\"filesPasteMenu\").disable();",
                    "}",
                    ""
                ]
            },
            "designerId": "73d0f693-fb4b-41b3-87d1-4e6faddb2d7d"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "var objects = this;",
                    "",
                    "var bucketsGridContextMenu = new Ext.menu.Menu({",
                    "    items:",
                    "    [",
                    "        { text: 'Delete Bucket',",
                    "         handler: function() {",
                    "             objects.deleteObjectBucket();",
                    "         }",
                    "        },",
                    "        { text: 'Empty Bucket',",
                    "         handler: function() {",
                    "             objects.emptyObjectBucket();",
                    "         }",
                    "        }",
                    "    ]",
                    "});",
                    "",
                    "var filesGridContextMenu = new Ext.menu.Menu({",
                    "    items:",
                    "    [",
                    "        { text: 'Open',",
                    "         id: 'filesOpenMenu',",
                    "         handler: function() {",
                    "             objects.openObjectFile();",
                    "         }",
                    "        },",
                    "        { text: 'Download',",
                    "         id: 'filesDownloadMenu',",
                    "         handler: function() {",
                    "             objects.downloadObjectFile();",
                    "         }",
                    "        },",
                    "/*",
                    "        { text: 'Create Folder',",
                    "         id: 'filesCreatefolderMenu',",
                    "         handler: function() {",
                    "             objects.createObjectFolder();",
                    "         }",
                    "        },",
                    "        { text: 'Upload',",
                    "         id: 'filesUploadMenu',",
                    "         handler: function() {",
                    "             objects.uploadFileClick();",
                    "         }",
                    "        },",
                    "*/",
                    "        { text: 'Make Public',",
                    "         id: 'filesMakepublicMenu',",
                    "         handler: function() {",
                    "             objects.makepublicObjectFile();",
                    "         }",
                    "        },",
                    "        { text: 'Make Protected',",
                    "         id: 'filesMakeprotectedMenu',",
                    "         handler: function() {",
                    "             objects.makeprotectedObjectFile();",
                    "         }",
                    "        },",
                    "        { text: 'Rename',",
                    "         id: 'filesRenameMenu',",
                    "         handler: function() {",
                    "             objects.renameFileClick();",
                    "         }",
                    "        },",
                    "        { text: 'Delete',",
                    "         id: 'filesDeleteMenu',",
                    "         handler: function() {",
                    "             objects.deleteObjectFile();",
                    "         }",
                    "        },",
                    "        {",
                    "            xtype: 'menuseparator'",
                    "        },",
                    "        { text: 'Cut',",
                    "         id: 'filesCutMenu',",
                    "         handler: function() {",
                    "             objects.cutObjectFile();",
                    "         }",
                    "        },",
                    "        { text: 'Copy',",
                    "         id: 'filesCopyMenu',",
                    "         handler: function() {",
                    "             objects.copyObjectFile();",
                    "         }",
                    "        },",
                    "        { text: 'Paste',",
                    "         id: 'filesPasteMenu',",
                    "         handler: function() {",
                    "             objects.pasteObjectFile();",
                    "         }",
                    "        }",
                    "    ]",
                    "});",
                    "",
                    "Ext.define('objectConstants', {",
                    "    singleton: true,",
                    "    me : objects,",
                    "    bucketsContextMenu: bucketsGridContextMenu,",
                    "    filesContextMenu: filesGridContextMenu,",
                    "    currentBucket: '',",
                    "    currentFolder: '',",
                    "    filesSelectList: null,",
                    "    filesSelectMode: 'cut',",
                    "    filesSelectBucket: '',",
                    "    selectRow:  null,",
                    "    selectIndex: 0,",
                    "    selectFilesRow:  null,",
                    "    selectFilesIndex: 0",
                    "});"
                ]
            },
            "designerId": "25f77906-6b28-447e-8f17-be0801b0ad55"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#objectBucketsGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onObjectBucketsGridpanelCellDblClick",
                "implHandler": [
                    "objectConstants.selectRow = record;",
                    "objectConstants.selectIndex = rowIndex;",
                    "objectConstants.currentBucket = record.get('name');",
                    "objectConstants.currentFolder = '';",
                    "",
                    "Ext.getCmp('objectCenterContainer').layout.setActiveItem(1);",
                    "objectConstants.me.setObjectFilesData();",
                    ""
                ],
                "name": "celldblclick",
                "scope": "me"
            },
            "designerId": "1de8c8ef-ee37-41c2-826f-fff6f4a27f57"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#objectBucketsGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onObjectBucketsGridpanelBeforeItemContextMenu",
                "implHandler": [
                    "objectConstants.selectRow = record;",
                    "objectConstants.selectIndex = index;",
                    "",
                    "var position = e.getXY();",
                    "e.stopEvent();",
                    "objectConstants.bucketsContextMenu.showAt(position);"
                ],
                "name": "beforeitemcontextmenu",
                "scope": "me"
            },
            "designerId": "8ea1bf95-2e9d-4db6-8f18-26c335f2218e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#bucketsCreateButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onbucketsCreateButtonClick",
                "implHandler": [
                    "//Add Popup 호출",
                    "",
                    "var AddWindow = Ext.create('widget.createBucketWindow');",
                    "AddWindow.title = 'Create Bucket';",
                    "AddWindow.show();",
                    "",
                    "var myForm = Ext.getCmp(\"createBucketFormPanel\");",
                    "myForm.getForm().findField(\"createBucketName\").focus();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "3a2e6eeb-3e64-4650-b1c7-fd7407497685"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#bucketsCreateMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onbucketsCreateMenuitemClick",
                "implHandler": [
                    "//Add Popup 호출",
                    "",
                    "var AddWindow = Ext.create('widget.createBucketWindow');",
                    "AddWindow.title = 'Create Bucket';",
                    "AddWindow.show();",
                    "",
                    "var myForm = Ext.getCmp(\"createBucketFormPanel\");",
                    "myForm.getForm().findField(\"createBucketName\").focus();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "5f6b5a61-abb2-4916-a715-5a398337e35c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#bucketsDeleteMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onbucketsDeleteMenuitemClick",
                "implHandler": [
                    "objectConstants.me.deleteObjectBucket();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "35b81fb1-073a-437e-aab6-ed268de6d616"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#bucketsEmptyMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onbucketsEmptyMenuitemClick",
                "implHandler": [
                    "objectConstants.me.emptyObjectBucket();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "a067be1f-360a-4bce-8541-c9292ed9e7e9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#bucketsRefreshMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onbucketsRefreshMenuitemClick",
                "implHandler": [
                    "objectConstants.me.setObjectBucketsData();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "41f0c6dd-081e-4c3d-94fd-520f5c6274d0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#createBucketName",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onCreateBucketNameTextfieldSpecialkey",
                "implHandler": [
                    "if (e.getKey() == e.ENTER) {",
                    "    this.createObjectBucket();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "designerId": "2708a5f6-ac9c-40cf-9541-c2ca9d4bf4bd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#createFolderName",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onCreateFolderNameTextfieldSpecialkey",
                "implHandler": [
                    "if (e.getKey() == e.ENTER) {",
                    "    this.createfolderObjectFile();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "designerId": "01937c2f-d053-457e-8ae5-02df4af06253"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#renameFileName",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onRenameFileNameTextfieldSpecialkey",
                "implHandler": [
                    "if (e.getKey() == e.ENTER) {",
                    "    this.renameObjectFile();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "designerId": "3064d2ff-9f13-4c9d-a280-d9a88793232a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#objectFilesGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onObjectFilesGridpanelCellClick",
                "implHandler": [
                    "objectConstants.selectFilesRow = record;",
                    "objectConstants.selectFilesIndex = rowIndex;",
                    "",
                    "objectConstants.me.setFilesMenuEnable(record);",
                    "",
                    "var key = record.get('key');",
                    "var folder = objectConstants.currentFolder;",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.urlPrefix + 'ceph/object/object?bucketName='+objectConstants.currentBucket + '&key='+key,",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "        var data = Ext.decode(response.responseText);",
                    "",
                    "        if ((objectConstants.currentBucket == data.data.bucketName) && (objectConstants.currentFolder == folder)) {",
                    "            Ext.getCmp(\"objectFilesDetail1\").update(data.data);",
                    "            Ext.getCmp(\"objectFilesDetail2\").update(data.data.acl.grantsAsList);",
                    "",
                    "            Ext.getCmp(\"objectFilesDetail\").expand();",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "cellclick",
                "scope": "me"
            },
            "designerId": "c24747c2-5753-4c56-a476-fa62c1df40aa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#objectFilesGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onObjectFilesGridpanelCellDblClick",
                "implHandler": [
                    "objectConstants.me.openObjectFile();",
                    ""
                ],
                "name": "celldblclick",
                "scope": "me"
            },
            "designerId": "99b5df0a-88a8-48e6-83be-bd5bdfdca9a5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#objectFilesGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onObjectFilesGridpanelBeforeItemContextMenu",
                "implHandler": [
                    "objectConstants.selectFilesRow = record;",
                    "objectConstants.selectFilesIndex = index;",
                    "",
                    "objectConstants.me.setFilesMenuEnable(record);",
                    "",
                    "var position = e.getXY();",
                    "e.stopEvent();",
                    "objectConstants.filesContextMenu.showAt(position);"
                ],
                "name": "beforeitemcontextmenu",
                "scope": "me"
            },
            "designerId": "0014ad4d-769c-4832-ab84-c8d11629049a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesAllBuckets",
                "designer|targetType": "Ext.button.Button",
                "fn": "onfilesAllBucketsButtonClick",
                "implHandler": [
                    "Ext.getCmp('objectCenterContainer').layout.setActiveItem(0);",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "ecd7174c-e7f3-4992-a3f6-8b73c1ca47eb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesUploadButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onfilesUploadButtonClick",
                "implHandler": [
                    "objectConstants.me.uploadFileClick();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "cc20956b-4dbe-4662-993c-6191019dbbb4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesOpenMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesOpenMenuitemClick",
                "implHandler": [
                    "objectConstants.me.openObjectFile();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "eedaf7ed-0d83-45c1-abb4-978651ab8633"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesDownloadMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesDownloadMenuitemClick",
                "implHandler": [
                    "objectConstants.me.downloadObjectFile();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "452de813-4f88-41a1-b416-ad02a95d63db"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesCreatefolderMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesCreatefolderMenuitemClick",
                "implHandler": [
                    "objectConstants.me.createObjectFolder();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "9c8d9156-85f6-49fb-965f-5239b485e56c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesUploadMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesUploadMenuitemClick",
                "implHandler": [
                    "objectConstants.me.uploadFileClick();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "637a51f8-8919-4366-beed-be8ed10ee3ab"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesMakepublicMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesMakepublicMenuitemClick",
                "implHandler": [
                    "objectConstants.me.makepublicObjectFile();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "9c6eb678-390e-4106-be82-f05b17447054"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesMakeprotectedMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesMakeprotectedMenuitemClick",
                "implHandler": [
                    "objectConstants.me.makeprotectedObjectFile();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "8c768b2a-bda8-48fa-adad-abae352ced1e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesRenameMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesRenameMenuitemClick",
                "implHandler": [
                    "objectConstants.me.renameFileClick();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "ca6423ea-a40c-4bca-a308-ea92fc32be99"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesDeleteMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesDeleteMenuitemClick",
                "implHandler": [
                    "objectConstants.me.deleteObjectFile();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "46a1cee3-4053-4519-946b-1ec80004d479"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesCutMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesCutMenuitemClick",
                "implHandler": [
                    "objectConstants.me.cutObjectFile();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "dc6c5765-ebc5-4878-84de-3d90f86a711c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesCopyMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesCopyMenuitemClick",
                "implHandler": [
                    "objectConstants.me.copyObjectFile();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "6eea58f8-64e3-4d55-a59f-6bf43019c15f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#filesPasteMenuItem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onfilesPasteMenuitemClick",
                "implHandler": [
                    "objectConstants.me.pasteObjectFile();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "a7ad7c37-895d-49fd-9247-30265f7053ca"
        }
    ]
}