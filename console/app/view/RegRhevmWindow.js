/*
 * File: app/view/RegRhevmWindow.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.RegRhevmWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.RegRhevmWindow',

    requires: [
        'Ext.form.Panel',
        'Ext.XTemplate',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Hidden',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 365,
    id: 'regRhevmWindow',
    itemId: 'regRhevmWindow',
    width: 380,
    layout: 'border',
    title: 'Add RHEVM',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    region: 'center',
                    header: false,
                    title: 'regRhevmPanel',
                    items: [
                        {
                            xtype: 'form',
                            id: 'rhevmForm',
                            itemId: 'rhevmForm',
                            bodyPadding: 15,
                            fieldDefaults: {
                                msgTarget: 'side',
                                labelWidth: 120
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Name',
                                    labelWidth: 120,
                                    name: 'rhevmName',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'combobox',
                                    anchor: '100%',
                                    padding: '',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Type',
                                    labelWidth: 120,
                                    name: 'hypervisorType',
                                    allowBlank: false,
                                    store: [
                                        'RHEVM'
                                    ]
                                },
                                {
                                    xtype: 'combobox',
                                    anchor: '100%',
                                    padding: '',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Protocol',
                                    labelWidth: 120,
                                    name: 'rhevmProtocol',
                                    allowBlank: false,
                                    store: [
                                        'HTTP',
                                        'HTTPS',
                                        
                                    ]
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Host',
                                    labelWidth: 120,
                                    name: 'rhevmHost',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Port',
                                    labelWidth: 120,
                                    name: 'rhevmPort',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Domain',
                                    labelWidth: 120,
                                    name: 'rhevmDomain',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Username',
                                    labelWidth: 120,
                                    name: 'rhevmUsername',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    componentCls: 'origin-passwd',
                                    padding: '',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Password',
                                    labelWidth: 120,
                                    name: 'rhevmPassword',
                                    inputType: 'password',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    padding: '',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Confirm Password',
                                    labelWidth: 120,
                                    name: 'confirmPasswd',
                                    inputType: 'password',
                                    allowBlank: false,
                                    vtype: 'password'
                                },
                                {
                                    xtype: 'hiddenfield',
                                    anchor: '100%',
                                    fieldLabel: 'Label',
                                    name: 'hypervisorId'
                                }
                            ]
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            ui: 'footer',
                            layout: {
                                type: 'hbox',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var rhevmForm = Ext.getCmp("rhevmForm");

                                        var action = GLOBAL.urlPrefix + "machine/insertHypervisor";
                                        var hypervisorId = null;

                                        if(rhevmForm.getForm().findField("hypervisorId").getValue() > 0){
                                            action = GLOBAL.urlPrefix + "hypervisor/updateHypervisor";
                                            hypervisorId = rhevmForm.getForm().findField("hypervisorId").getValue();
                                        }

                                        rhevmForm.getForm().submit({
                                            clientValidation: true,
                                            url: action,
                                            method : "POST",
                                            params: {
                                                newStatus: 'delivered'
                                            },
                                            waitMsg: 'Saving Data...',
                                            success: function(form, action) {
                                                Ext.Msg.alert('Success', action.result.msg);

                                                Ext.getCmp('hypervisorGrid').getStore().load({

                                                    callback:function(records, operation, success){

                                                        if(hypervisorId) {

                                                            Ext.each(records, function(record) {

                                                                if(record.get("hypervisorId") == hypervisorId) {
                                                                    Ext.getCmp('hypervisorGrid').getSelectionModel().select(record,true,false);

                                                                    RHEVMConstants.selectRow = record;
                                                                    RHEVMConstants.me.selectHypervisorGrid();
                                                                }
                                                            });
                                                        }
                                                    }

                                                });

                                                rhevmForm.up('window').close();
                                            },
                                            failure: function(form, action) {
                                                switch (action.failureType) {
                                                    case Ext.form.action.Action.CLIENT_INVALID:
                                                    Ext.Msg.alert('Failure', '유효하지 않은 입력값이 존재합니다.');
                                                    break;
                                                    case Ext.form.action.Action.CONNECT_FAILURE:
                                                    Ext.Msg.alert('Failure', 'Server communication failed');
                                                    break;
                                                    case Ext.form.action.Action.SERVER_INVALID:
                                                    Ext.Msg.alert('Failure', action.result.msg);
                                                }
                                            }
                                        });
                                    },
                                    id: 'rhevmCreateBtn',
                                    itemId: 'rhevmCreateBtn',
                                    margin: '0 15 0 0',
                                    padding: '2 10 2 10',
                                    text: 'Save'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.MessageBox.confirm('Confirm', '작업을 취소하시겠습니까?', function(btn){

                                            if(btn == "yes"){
                                                button.up("window").close();
                                            }

                                        });

                                    },
                                    id: 'rhevmCancelBtn',
                                    itemId: 'rhevmCancelBtn',
                                    margin: '0 0 0 0',
                                    padding: '2 5 2 5',
                                    text: 'Cancel'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});