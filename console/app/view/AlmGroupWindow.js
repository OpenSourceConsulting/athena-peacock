/*
 * File: app/view/AlmGroupWindow.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.AlmGroupWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.AlmGroupWindow',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.XTemplate',
        'Ext.form.field.Checkbox',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 200,
    id: 'AlmGroupWindow',
    itemId: 'AlmGroupWindow',
    width: 460,
    resizable: false,
    layout: 'border',
    title: 'Add Group',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    region: 'center',
                    header: false,
                    title: 'almGroupPanel',
                    items: [
                        {
                            xtype: 'form',
                            id: 'popAlmGroupForm',
                            itemId: 'popAlmGroupForm',
                            bodyPadding: 15,
                            fieldDefaults: {
                                msgTarget: 'side',
                                labelWidth: 120
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Group Name',
                                    labelWidth: 120,
                                    name: 'name',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'checkboxfield',
                                    anchor: '100%',
                                    fieldLabel: 'Is Active',
                                    labelWidth: 120,
                                    name: 'active',
                                    boxLabel: ''
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    fieldLabel: 'Group Description',
                                    labelWidth: 120,
                                    name: 'description'
                                }
                            ]
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    ui: 'footer',
                    layout: {
                        type: 'hbox',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var groupForm = Ext.getCmp("popAlmGroupForm");

                                if(groupForm.isValid()) {

                                    Ext.Ajax.request({
                                        url: GLOBAL.urlPrefix + "alm/groupmanagement",
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        waitMsg: 'Saving Data...',
                                        jsonData: groupForm.getForm().getFieldValues(),
                                        success: function (response) {

                                            var responseData = Ext.JSON.decode(response.responseText);

                                            if(responseData.success) {

                                                Ext.Msg.alert('Success', responseData.msg);

                                                Ext.getCmp('almGroupGrid').getStore().reload();
                                                groupForm.up('window').close();

                                            } else {

                                                Ext.Msg.alert('Failure', responseData.msg);

                                            }

                                        },
                                        failure: function (response) {
                                            var msg = Ext.JSON.decode(response.responseText).msg;

                                            Ext.Msg.alert('Failure', msg);
                                        }
                                    });

                                }

                            },
                            itemId: '',
                            margin: '0 15 0 0',
                            padding: '2 5 2 5',
                            text: 'Create'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                Ext.MessageBox.confirm('Confirm', '작업을 취소하시겠습니까?', function(btn){

                                    if(btn == "yes"){
                                        button.up("window").close();
                                    }

                                });

                            },
                            margin: '0 0 0 0',
                            padding: '2 5 2 5',
                            text: 'Cancel'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});