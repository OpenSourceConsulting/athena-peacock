/*
 * File: app/view/ManageGroupWindow.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.ManageGroupWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.ManageGroupWindow',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.column.Action',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.panel.Tool'
    ],

    height: 400,
    id: 'ManageGroupWindow',
    itemId: 'ManageGroupWindow',
    width: 300,
    resizable: false,
    layout: 'border',
    title: 'Manage Group',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    region: 'center',
                    header: false,
                    title: 'ManageGroup',
                    items: [
                        {
                            xtype: 'gridpanel',
                            height: 358,
                            id: 'instanceGroupGrid',
                            itemId: 'instanceGroupGrid',
                            autoScroll: true,
                            columnLines: true,
                            forceFit: true,
                            store: 'InstanceGroupStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'machineId',
                                    hideable: false
                                },
                                {
                                    xtype: 'gridcolumn',
                                    minWidth: 150,
                                    dataIndex: 'group',
                                    text: 'Group'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    minWidth: 60,
                                    dataIndex: 'gid',
                                    text: 'GID'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    text: 'Delete',
                                    maxWidth: 60,
                                    minWidth: 60,
                                    style: 'text-align:left;',
                                    width: 60,
                                    defaultWidth: 60,
                                    align: 'center',
                                    menuText: '',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {

                                                if(record.get("gid") < 500) {
                                                    Ext.MessageBox.alert('Message', 'GID가 500 미만인 시스템 그룹은 삭제할 수 없습니다.');
                                                    return;
                                                }

                                                Ext.MessageBox.confirm('Confirm', '삭제 하시겠습니까?', function(btn){

                                                    if(btn == "yes"){

                                                        Ext.Ajax.request({
                                                            url: GLOBAL.urlPrefix + "machine/removeGroup",
                                                            params : {
                                                                machineId : instancesConstants.actionRow.get("machineId"),
                                                                group : record.get("group"),
                                                                gid : record.get("gid")
                                                            },
                                                            disableCaching : true,
                                                            waitMsg: 'Delete Group...',
                                                            success: function(response){
                                                                var msg = Ext.JSON.decode(response.responseText).msg;
                                                                Ext.MessageBox.alert('알림', msg);

                                                                Ext.getCmp("instanceGroupGrid").getStore().reload();

                                                            }
                                                        });
                                                    }

                                                });
                                            },
                                            icon: 'resources/images/icons/delete.png',
                                            iconCls: ''
                                        }
                                    ]
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            handler: function(button, e) {
                                                var regGroupWindow = Ext.create("widget.RegInstanceGroupWindow");
                                                regGroupWindow.show();

                                                regGroupWindow.down("form").getForm().findField("machineId").setValue(instancesConstants.actionRow.get("machineId"));

                                            },
                                            margin: '0 15 0 0',
                                            padding: '2 7 2 7',
                                            text: 'Create Group'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            tools: [
                {
                    xtype: 'tool',
                    handler: function(event, toolEl, owner, tool) {
                        var groupStore = Ext.getCmp('instanceGroupGrid').getStore();

                        groupStore.getProxy().extraParams = {
                            machineId : instancesConstants.actionRow.get("machineId")
                        };

                        groupStore.load();

                    },
                    tooltip: '',
                    type: 'refresh'
                }
            ]
        });

        me.callParent(arguments);
    }

});