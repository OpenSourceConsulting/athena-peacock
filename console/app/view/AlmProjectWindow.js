/*
 * File: app/view/AlmProjectWindow.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.AlmProjectWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.AlmProjectWindow',

    requires: [
        'Ext.form.Panel',
        'Ext.XTemplate',
        'Ext.form.field.ComboBox',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 270,
    id: 'AlmProjectWindow',
    itemId: 'AlmProjectWindow',
    width: 400,
    resizable: false,
    layout: 'border',
    title: 'Create Project',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    region: 'center',
                    header: false,
                    title: 'projectPanel',
                    items: [
                        {
                            xtype: 'form',
                            id: 'addProjectForm',
                            itemId: 'addProjectForm',
                            bodyPadding: 15,
                            fieldDefaults: {
                                msgTarget: 'side',
                                labelWidth: 120
                            },
                            waitMsgTarget: true,
                            items: [
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Project Code',
                                    name: 'projectCode',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    padding: '',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Project Name',
                                    name: 'projectName',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    margin: '0 0 15 0',
                                    padding: '',
                                    fieldLabel: 'Project Description',
                                    name: 'projectDescription'
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    margin: '0 0 15 0',
                                    padding: '',
                                    fieldLabel: 'Group Description',
                                    name: 'groupDescription'
                                },
                                {
                                    xtype: 'combobox',
                                    anchor: '100%',
                                    margin: '0 0 15 0',
                                    padding: '',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Select Repository',
                                    name: 'groupDescription',
                                    allowBlank: false,
                                    displayField: 'repositoryCode',
                                    store: 'ComboAlmRepositoryStore',
                                    valueField: 'repositoryCode'
                                }
                            ]
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            ui: 'footer',
                            layout: {
                                type: 'hbox',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var projectForm = Ext.getCmp("addProjectForm");

                                        if(projectForm.isValid()) {

                                            Ext.Ajax.request({
                                                url: GLOBAL.urlPrefix + "alm/project",
                                                method: 'POST',
                                                headers: { 'Content-Type': 'application/json' },
                                                jsonData: projectForm.getForm().getFieldValues(),
                                                success: function (response) {

                                                    Ext.Msg.alert('Success', Ext.JSON.decode(response.responseText).msg);

                                                    Ext.getCmp('almProjectGrid').getStore().reload();
                                                    projectForm.up('window').close();
                                                },
                                                failure: function (response) {
                                                    var msg = Ext.JSON.decode(response.responseText).msg;

                                                    Ext.Msg.alert('Failure', msg);
                                                }
                                            });

                                        }

                                    },
                                    margin: '0 15 0 0',
                                    padding: '2 5 2 5',
                                    text: 'Create'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.MessageBox.confirm('Confirm', '작업을 취소하시겠습니까?', function(btn){

                                            if(btn == "yes"){
                                                button.up("window").close();
                                            }

                                        });

                                    },
                                    margin: '0 0 0 0',
                                    padding: '2 5 2 5',
                                    text: 'Cancel'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});