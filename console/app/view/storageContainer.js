/*
 * File: app/view/storageContainer.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.storageContainer', {
    extend: 'Ext.container.Container',
    alias: 'widget.storageContainer',

    requires: [
        'MyApp.view.hostContainer',
        'MyApp.view.monContainer',
        'MyApp.view.osdContainer',
        'MyApp.view.poolContainer',
        'MyApp.view.pgStatusContainer',
        'MyApp.view.usageContainer',
        'Ext.panel.Panel',
        'Ext.button.Button'
    ],

    height: 755,
    id: 'storageContainer',
    itemId: 'storageContainer',
    width: 1000,
    layout: 'border',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    region: 'north',
                    height: 80,
                    id: 'storageMenuPanel',
                    itemId: 'storageMenuPanel',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'hostBtn',
                            itemId: 'hostBtn',
                            scale: 'large',
                            text: 'HOST<br/>11 / 11<br/>Reporting'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'monBtn',
                            itemId: 'monBtn',
                            scale: 'large',
                            text: 'MON<br/> 2 / 2<br/>Quorum'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'osdBtn',
                            itemId: 'osdBtn',
                            scale: 'large',
                            text: 'OSD<br/>9 / 9<br/>In & Up'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'poolBtn',
                            itemId: 'poolBtn',
                            scale: 'large',
                            text: 'POOL<br/>14 / 14<br/>Active'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'pgStatusBtn',
                            itemId: 'pgStatusBtn',
                            scale: 'large',
                            text: 'PG Status<br/>356 / 256<br/>Active / Clean'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'usageBtn',
                            itemId: 'usageBtn',
                            scale: 'large',
                            text: 'Usage<br/><br/>0.3Tb / 80.9Tb'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    region: 'center',
                    id: 'storageSubContainer',
                    itemId: 'storageSubContainer',
                    layout: 'card',
                    items: [
                        {
                            xtype: 'hostcontainer'
                        },
                        {
                            xtype: 'moncontainer'
                        },
                        {
                            xtype: 'osdcontainer'
                        },
                        {
                            xtype: 'poolcontainer'
                        },
                        {
                            xtype: 'pgstatuscontainer'
                        },
                        {
                            xtype: 'usagecontainer'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});