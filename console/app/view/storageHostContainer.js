/*
 * File: app/view/storageHostContainer.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.storageHostContainer', {
    extend: 'Ext.container.Container',
    alias: 'widget.storageHostContainer',

    requires: [
        'Ext.grid.Panel',
        'Ext.toolbar.Toolbar',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.Img'
    ],

    id: 'storageHostContainer',
    itemId: 'storageHostContainer',
    layout: 'border',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    flex: 3,
                    region: 'center',
                    id: 'storageHostGrid',
                    itemId: 'storageHostGrid',
                    columnLines: true,
                    forceFit: true,
                    store: 'storageHostJsonStore',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            height: 36,
                            id: 'storageHostToolbar',
                            itemId: 'storageHostToolbar'
                        }
                    ],
                    viewConfig: {
                        id: 'storageHostGridView',
                        itemId: 'storageHostGridView'
                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'hostname',
                            text: 'Hostname'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'type',
                            text: 'Type'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'id',
                            text: 'Id'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value === true) {
                                    return "<img src='resources/images/grid/drop-yes.png'>";
                                } else {
                                    return "<img src='resources/images/grid/drop-no.png'>";
                                }
                            },
                            align: 'center',
                            dataIndex: 'running',
                            text: 'Running'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 3,
                    region: 'south',
                    split: true,
                    id: 'storageHostDetail',
                    itemId: 'storageHostDetail',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'panel',
                            flex: 1,
                            border: 1,
                            id: 'storageHostDetail1',
                            itemId: 'storageHostDetail1',
                            layout: 'border',
                            bodyPadding: 10,
                            bodyStyle: {
                                background: '#fff'
                            },
                            title: 'Total Objects',
                            items: [
                                {
                                    xtype: 'image',
                                    region: 'center',
                                    id: 'storageHostImg1',
                                    itemId: 'storageHostImg1',
                                    src: 'http://192.168.0.227/render?from=-2hours&until=now&width=800&height=450&hideLegend=true&lineMode=connected&target=ceph.cluster.a82efafc-bfa3-473e-92f6-25719386b673.pool.all.num_objects'
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            flex: 1,
                            border: 1,
                            id: 'storageHostDetail2',
                            itemId: 'storageHostDetail2',
                            layout: 'border',
                            bodyPadding: 10,
                            bodyStyle: {
                                background: '#fff'
                            },
                            title: 'Total Used Bytes',
                            items: [
                                {
                                    xtype: 'image',
                                    region: 'center',
                                    id: 'storageHostImg2',
                                    itemId: 'storageHostImg2',
                                    src: 'http://192.168.0.227/render?from=-2hours&until=now&width=800&height=450&lineMode=connected&target=ceph.cluster.a82efafc-bfa3-473e-92f6-25719386b673.df.total_used_bytes&_uniq=0.43321172590367496&hideLegend=true'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});