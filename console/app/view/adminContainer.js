/*
 * File: app/view/adminContainer.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.adminContainer', {
    extend: 'Ext.container.Container',
    alias: 'widget.adminContainer',

    requires: [
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.toolbar.Separator',
        'Ext.form.field.Text',
        'Ext.toolbar.Paging',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.grid.column.Action',
        'Ext.form.Panel',
        'Ext.form.Label',
        'Ext.form.FieldContainer',
        'Ext.form.field.Display',
        'Ext.toolbar.Spacer',
        'Ext.grid.plugin.CellEditing',
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.tree.Column',
        'Ext.grid.column.CheckColumn',
        'Ext.form.field.Hidden'
    ],

    height: 755,
    id: 'userContainer',
    itemId: 'userContainer',
    width: 1000,
    layout: 'border',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'tabpanel',
                    region: 'center',
                    id: 'adminTabPanel',
                    itemId: 'adminTabPanel',
                    padding: '5 0 0 0',
                    style: 'background:#ffffff',
                    activeTab: 0,
                    plain: true,
                    layout: {
                        type: 'card',
                        deferredRender: false
                    },
                    items: [
                        {
                            xtype: 'panel',
                            id: 'adminTabUserPanel',
                            itemId: 'adminTabUserPanel',
                            layout: 'border',
                            title: 'User',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    flex: 1,
                                    region: 'center',
                                    id: 'userGrid',
                                    itemId: 'userGrid',
                                    minHeight: 100,
                                    autoScroll: true,
                                    columnLines: true,
                                    forceFit: true,
                                    store: 'UserStore',
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'top',
                                            id: 'instancesToolbar1',
                                            itemId: 'instancesToolbar',
                                            width: 150,
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    handler: function(button, e) {
                                                        userConstants.me.showUserWindow('new');
                                                    },
                                                    cls: 'auth-write',
                                                    id: 'createUserBtn',
                                                    itemId: 'createUserBtn',
                                                    text: 'Create New User'
                                                },
                                                {
                                                    xtype: 'tbseparator'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    id: 'searchUserName',
                                                    itemId: 'searchUserName',
                                                    fieldLabel: 'Filtering',
                                                    labelWidth: 60,
                                                    name: 'searchUserName',
                                                    emptyText: 'Search User Name',
                                                    enableKeyEvents: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'pagingtoolbar',
                                            dock: 'bottom',
                                            width: 360,
                                            displayInfo: true,
                                            store: 'UserStore'
                                        }
                                    ],
                                    columns: [
                                        {
                                            xtype: 'numbercolumn',
                                            maxWidth: 100,
                                            minWidth: 60,
                                            dataIndex: 'userId',
                                            text: 'ID',
                                            format: '0000'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            minWidth: 100,
                                            defaultWidth: 150,
                                            dataIndex: 'loginId',
                                            text: 'Login ID'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            minWidth: 100,
                                            defaultWidth: 150,
                                            dataIndex: 'userName',
                                            text: 'User Name'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            minWidth: 100,
                                            defaultWidth: 150,
                                            dataIndex: 'deptName',
                                            text: 'Dept Name'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            defaultWidth: 150,
                                            dataIndex: 'passwd',
                                            hideable: false,
                                            text: 'Password'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            minWidth: 150,
                                            defaultWidth: 200,
                                            dataIndex: 'email',
                                            text: 'Email'
                                        },
                                        {
                                            xtype: 'datecolumn',
                                            hidden: true,
                                            dataIndex: 'lastLogon',
                                            hideable: false,
                                            text: 'Last_logon'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            hidden: true,
                                            dataIndex: 'regUserId',
                                            hideable: false,
                                            text: 'RegUserId'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            minWidth: 220,
                                            defaultWidth: 200,
                                            dataIndex: 'regDt',
                                            text: 'Create Date'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            hidden: true,
                                            dataIndex: 'updUserId',
                                            hideable: false,
                                            text: 'UpdUserId'
                                        },
                                        {
                                            xtype: 'datecolumn',
                                            hidden: true,
                                            dataIndex: 'updDt',
                                            hideable: false,
                                            text: 'UpdDt'
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            text: 'Edit',
                                            maxWidth: 65,
                                            minWidth: 65,
                                            style: 'text-align:left;',
                                            width: 65,
                                            align: 'center',
                                            hideable: false,
                                            menuText: '',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        userConstants.actionRow = record;
                                                        userConstants.me.showUserWindow('edit');
                                                    },
                                                    icon: 'resources/images/icons/cog.png',
                                                    iconCls: ''
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            text: 'Delete',
                                            maxWidth: 60,
                                            minWidth: 70,
                                            style: 'text-align:left;',
                                            width: 60,
                                            defaultWidth: 60,
                                            align: 'center',
                                            hideable: false,
                                            menuText: '',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        userConstants.actionRow = record;

                                                        userConstants.me.deleteUser();

                                                    },
                                                    icon: 'resources/images/icons/delete.png',
                                                    iconCls: ''
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'panel',
                                    flex: 1,
                                    region: 'south',
                                    split: true,
                                    height: 150,
                                    id: 'userDetailPanel',
                                    itemId: 'userDetailPanel',
                                    autoScroll: true,
                                    layout: 'card',
                                    items: [
                                        {
                                            xtype: 'panel',
                                            height: 1000,
                                            id: 'blankPanel4',
                                            itemId: 'blankPanel',
                                            width: 1000
                                        },
                                        {
                                            xtype: 'panel',
                                            id: 'userDetail',
                                            autoScroll: true,
                                            items: [
                                                {
                                                    xtype: 'form',
                                                    id: 'getUserForm',
                                                    itemId: 'getUserForm',
                                                    padding: '',
                                                    defaults: {
                                                        border: false,
                                                        xtype: 'panel',
                                                        flex: 1,
                                                        layout: 'anchor'
                                                    },
                                                    bodyPadding: 10,
                                                    bodyStyle: 'padding:5px 5px 0',
                                                    header: false,
                                                    fieldDefaults: {
                                                        msgTarget: 'side',
                                                        margin: '0 10',
                                                        readOnly: true,
                                                        labelStyle: 'font-weight: bold;',
                                                        labelSeparator: ' :'
                                                    },
                                                    waitMsgTarget: 'instDescForm',
                                                    items: [
                                                        {
                                                            xtype: 'label',
                                                            html: '',
                                                            id: 'userTitleLabel',
                                                            itemId: 'userTitleLabel',
                                                            margin: '',
                                                            padding: 1,
                                                            text: ''
                                                        },
                                                        {
                                                            xtype: 'fieldcontainer',
                                                            height: 34,
                                                            defaults: {
                                                                flex: 1
                                                            },
                                                            fieldLabel: 'Label',
                                                            hideLabel: true,
                                                            layout: {
                                                                type: 'hbox',
                                                                align: 'middle'
                                                            },
                                                            items: [
                                                                {
                                                                    xtype: 'displayfield',
                                                                    fieldLabel: 'User ID',
                                                                    labelSeparator: ' :',
                                                                    labelStyle: 'font-weight: bold;',
                                                                    name: 'userId'
                                                                },
                                                                {
                                                                    xtype: 'displayfield',
                                                                    fieldLabel: 'User Name',
                                                                    name: 'userName'
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'fieldcontainer',
                                                            height: 34,
                                                            defaults: {
                                                                flex: 1
                                                            },
                                                            fieldLabel: 'Label',
                                                            hideLabel: true,
                                                            layout: {
                                                                type: 'hbox',
                                                                align: 'middle'
                                                            },
                                                            items: [
                                                                {
                                                                    xtype: 'displayfield',
                                                                    fieldLabel: 'Login ID',
                                                                    name: 'loginId'
                                                                },
                                                                {
                                                                    xtype: 'displayfield',
                                                                    fieldLabel: 'Password',
                                                                    name: 'passwd'
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'fieldcontainer',
                                                            height: 34,
                                                            defaults: {
                                                                flex: 1
                                                            },
                                                            fieldLabel: 'Label',
                                                            hideLabel: true,
                                                            layout: {
                                                                type: 'hbox',
                                                                align: 'middle'
                                                            },
                                                            items: [
                                                                {
                                                                    xtype: 'displayfield',
                                                                    fieldLabel: 'Dept Name',
                                                                    name: 'deptName'
                                                                },
                                                                {
                                                                    xtype: 'displayfield',
                                                                    fieldLabel: 'Email',
                                                                    name: 'email'
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'fieldcontainer',
                                                            height: 34,
                                                            defaults: {
                                                                flex: 1
                                                            },
                                                            fieldLabel: 'Label',
                                                            hideLabel: true,
                                                            layout: {
                                                                type: 'hbox',
                                                                align: 'middle'
                                                            },
                                                            items: [
                                                                {
                                                                    xtype: 'displayfield',
                                                                    margins: '0 20 0 0',
                                                                    padding: '',
                                                                    fieldLabel: 'Last Logon',
                                                                    name: 'lastLogon'
                                                                },
                                                                {
                                                                    xtype: 'tbspacer',
                                                                    flex: 1
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            id: 'adminTabPermissionPanel',
                            itemId: 'adminTabPermissionPanel',
                            layout: 'border',
                            title: 'User Permission',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    flex: 2,
                                    region: 'center',
                                    id: 'userPermissionGrid',
                                    itemId: 'userPermissionGrid',
                                    minHeight: 100,
                                    autoScroll: true,
                                    columnLines: true,
                                    forceFit: true,
                                    store: 'PermissionStore',
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'top',
                                            width: 150,
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    handler: function(button, e) {

                                                        var permissionWindow = Ext.create("widget.NewPermissionWindow");
                                                        permissionWindow.show();

                                                        Ext.getCmp("allMenuTreeGrid").bindStore(Ext.getStore("AllMenuTreeStore"));
                                                        Ext.getCmp("allMenuTreeGrid").getStore().load({
                                                            callback : function(records, options, success) {
                                                                Ext.getCmp("allMenuTreeGrid").expandAll();
                                                            }
                                                        });
                                                    },
                                                    cls: 'auth-write',
                                                    text: 'Create New Permission'
                                                },
                                                {
                                                    xtype: 'tbseparator'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    id: 'searchUserPermissionName',
                                                    itemId: 'searchUserPermissionName',
                                                    fieldLabel: 'Filtering',
                                                    labelWidth: 60,
                                                    name: 'searchUserName',
                                                    emptyText: 'Search Permission Name',
                                                    enableKeyEvents: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'pagingtoolbar',
                                            dock: 'bottom',
                                            width: 360,
                                            displayInfo: true,
                                            store: 'PermissionStore'
                                        }
                                    ],
                                    columns: [
                                        {
                                            xtype: 'numbercolumn',
                                            maxWidth: 100,
                                            minWidth: 60,
                                            dataIndex: 'permId',
                                            text: 'ID',
                                            format: '0000'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            minWidth: 150,
                                            defaultWidth: 150,
                                            dataIndex: 'permNm',
                                            text: 'Permission Name'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            minWidth: 80,
                                            dataIndex: 'users',
                                            text: 'Users'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            minWidth: 220,
                                            defaultWidth: 200,
                                            dataIndex: 'regDt',
                                            text: 'Create Date'
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            text: 'Edit',
                                            maxWidth: 65,
                                            minWidth: 65,
                                            style: 'text-align:left;',
                                            width: 65,
                                            align: 'center',
                                            hideable: false,
                                            menuText: '',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {

                                                        var permissionWindow = Ext.create("widget.EditPermissionWindow");
                                                        permissionWindow.show();

                                                        Ext.getCmp("editPermissionForm").getForm().loadRecord(record);
                                                    },
                                                    icon: 'resources/images/icons/cog.png',
                                                    iconCls: ''
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            text: 'Delete',
                                            maxWidth: 60,
                                            minWidth: 70,
                                            style: 'text-align:left;',
                                            width: 60,
                                            defaultWidth: 60,
                                            align: 'center',
                                            hideable: false,
                                            menuText: '',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {

                                                        if(record.get("users") > 0) {

                                                            Ext.Msg.alert('Message', "등록된 User를 먼저 삭제해야 합니다.");

                                                        } else {

                                                            userConstants.actionRow = record;

                                                            userConstants.me.deleteUserPermission();

                                                        }
                                                    },
                                                    icon: 'resources/images/icons/delete.png',
                                                    iconCls: ''
                                                }
                                            ]
                                        }
                                    ],
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.CellEditing', {

                                        })
                                    ]
                                },
                                {
                                    xtype: 'panel',
                                    flex: 3,
                                    region: 'south',
                                    split: true,
                                    height: 150,
                                    id: 'userPermissionDetailPanel',
                                    itemId: 'userPermissionDetailPanel',
                                    autoScroll: true,
                                    layout: 'card',
                                    items: [
                                        {
                                            xtype: 'panel',
                                            height: 1000,
                                            id: 'blankPanel9',
                                            itemId: 'blankPanel',
                                            width: 1000
                                        },
                                        {
                                            xtype: 'panel',
                                            autoScroll: true,
                                            dockedItems: [
                                                {
                                                    xtype: 'label',
                                                    dock: 'top',
                                                    html: '<h2></h2>',
                                                    id: 'permittionDetailTitleLabel',
                                                    itemId: 'permittionDetailTitleLabel',
                                                    margin: '5 0 0 0',
                                                    padding: 2,
                                                    text: ''
                                                }
                                            ],
                                            items: [
                                                {
                                                    xtype: 'tabpanel',
                                                    id: 'userPermissionDetailTabPanel',
                                                    itemId: 'userPermissionDetailTabPanel',
                                                    padding: '15 10 10 10',
                                                    style: 'background:#ffffff;',
                                                    activeTab: 0,
                                                    plain: true,
                                                    items: [
                                                        {
                                                            xtype: 'panel',
                                                            autoScroll: true,
                                                            title: 'Detail',
                                                            items: [
                                                                {
                                                                    xtype: 'panel',
                                                                    autoScroll: true,
                                                                    layout: 'fit',
                                                                    header: false,
                                                                    title: 'My Panel',
                                                                    dockedItems: [
                                                                        {
                                                                            xtype: 'treepanel',
                                                                            getRecords: function() {
                                                                                var current = 0;
                                                                                var records = [];
                                                                                return (function find(nodes) {
                                                                                    var i, len = nodes.length;
                                                                                    for (i = 0; i < len; i++) {
                                                                                        records.push(nodes[i]);
                                                                                        current++;
                                                                                        var found = find(nodes[i].childNodes);
                                                                                    }

                                                                                    return records;

                                                                                }(this.store.getRootNode().childNodes));

                                                                            },
                                                                            plugins: [
                                                                                Ext.create('Ext.grid.plugin.CellEditing',
                                                                                {
                                                                                    
                                                                                })
                                                                            ],
                                                                            dock: 'top',
                                                                            id: 'permissionMenuTreeGrid',
                                                                            itemId: 'permissionMenuTreeGrid',
                                                                            autoDestroy: false,
                                                                            header: false,
                                                                            title: 'My Tree Grid Panel',
                                                                            columnLines: true,
                                                                            forceFit: false,
                                                                            rowLines: true,
                                                                            rootVisible: false,
                                                                            viewConfig: {

                                                                            },
                                                                            columns: [
                                                                                {
                                                                                    xtype: 'treecolumn',
                                                                                    minWidth: 300,
                                                                                    dataIndex: 'menuNm',
                                                                                    groupable: false,
                                                                                    text: 'Menu',
                                                                                    flex: 1
                                                                                },
                                                                                {
                                                                                    xtype: 'checkcolumn',
                                                                                    minWidth: 100,
                                                                                    dataIndex: 'isRead',
                                                                                    menuDisabled: true,
                                                                                    text: 'Read',
                                                                                    stopSelection: false,
                                                                                    listeners: {
                                                                                        checkchange: {
                                                                                            fn: me.onCheckcolumnCheckChange,
                                                                                            scope: me
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    xtype: 'checkcolumn',
                                                                                    minWidth: 100,
                                                                                    dataIndex: 'isWrite',
                                                                                    text: 'Write',
                                                                                    listeners: {
                                                                                        checkchange: {
                                                                                            fn: me.onCheckcolumnCheckChange1,
                                                                                            scope: me
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ],
                                                                            dockedItems: [
                                                                                {
                                                                                    xtype: 'toolbar',
                                                                                    dock: 'top',
                                                                                    items: [
                                                                                        {
                                                                                            xtype: 'tbspacer',
                                                                                            flex: 1
                                                                                        },
                                                                                        {
                                                                                            xtype: 'button',
                                                                                            handler: function(button, e) {

                                                                                                var menuRecords = Ext.getCmp("permissionMenuTreeGrid").getRecords();

                                                                                                var menus = [];
                                                                                                Ext.each(menuRecords, function(record) {
                                                                                                    var menu = {};
                                                                                                    menu.menuId = record.get("menuId");
                                                                                                    menu.readYn = (record.get("isRead") == true ? "1" : "0");
                                                                                                    menu.writeYn = (record.get("isWrite") == true ? "1" : "0");

                                                                                                    menus.push(menu);

                                                                                                });

                                                                                                var permissionForm = Ext.getCmp("detailPermissionForm");

                                                                                                permissionForm.getForm().findField("permMenus").setValue(Ext.JSON.encode(menus));

                                                                                                permissionForm.getForm().submit({
                                                                                                    clientValidation: true,
                                                                                                    url: GLOBAL.urlPrefix + "permission/updatemenus",
                                                                                                    method : "POST",
                                                                                                    params: {
                                                                                                        newStatus: 'delivered'
                                                                                                    },
                                                                                                    waitMsg: 'Saving Data...',
                                                                                                    success: function(form, action) {
                                                                                                        Ext.Msg.alert('Success', action.result.msg);

                                                                                                        Ext.getCmp('permissionMenuTreeGrid').getStore().load({
                                                                                                            callback : function(records, options, success) {
                                                                                                                Ext.getCmp("permissionMenuTreeGrid").expandAll();
                                                                                                            }
                                                                                                        });

                                                                                                        permissionForm.up('window').close();
                                                                                                    },
                                                                                                    failure: function(form, action) {
                                                                                                        switch (action.failureType) {
                                                                                                            case Ext.form.action.Action.CLIENT_INVALID:
                                                                                                            Ext.Msg.alert('Failure', '유효하지 않은 입력값이 존재합니다.');
                                                                                                            break;
                                                                                                            case Ext.form.action.Action.CONNECT_FAILURE:
                                                                                                            Ext.Msg.alert('Failure', 'Server communication failed');
                                                                                                            break;
                                                                                                            case Ext.form.action.Action.SERVER_INVALID:
                                                                                                            Ext.Msg.alert('Failure', action.result.msg);
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                            },
                                                                                            cls: 'auth-write',
                                                                                            padding: '3 10 3 10',
                                                                                            text: 'Save'
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ],
                                                                    items: [
                                                                        {
                                                                            xtype: 'form',
                                                                            height: 5,
                                                                            id: 'detailPermissionForm',
                                                                            itemId: 'detailPermissionForm',
                                                                            bodyPadding: 10,
                                                                            header: false,
                                                                            title: 'My Form',
                                                                            items: [
                                                                                {
                                                                                    xtype: 'hiddenfield',
                                                                                    anchor: '100%',
                                                                                    fieldLabel: 'Label',
                                                                                    name: 'permId'
                                                                                },
                                                                                {
                                                                                    xtype: 'hiddenfield',
                                                                                    anchor: '100%',
                                                                                    fieldLabel: 'Label',
                                                                                    name: 'permMenus'
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'panel',
                                                            title: 'Users',
                                                            items: [
                                                                {
                                                                    xtype: 'gridpanel',
                                                                    height: 290,
                                                                    id: 'permissionUsersGrid',
                                                                    itemId: 'permissionUsersGrid',
                                                                    autoScroll: true,
                                                                    autoDestroy: false,
                                                                    header: false,
                                                                    title: 'My Grid Panel',
                                                                    columnLines: true,
                                                                    forceFit: true,
                                                                    store: 'PermissionUserStore',
                                                                    columns: [
                                                                        {
                                                                            xtype: 'gridcolumn',
                                                                            minWidth: 60,
                                                                            defaultWidth: 60,
                                                                            dataIndex: 'userId',
                                                                            text: 'ID'
                                                                        },
                                                                        {
                                                                            xtype: 'gridcolumn',
                                                                            minWidth: 120,
                                                                            dataIndex: 'loginId',
                                                                            text: 'Login ID'
                                                                        },
                                                                        {
                                                                            xtype: 'gridcolumn',
                                                                            minWidth: 180,
                                                                            dataIndex: 'userName',
                                                                            text: 'User Name'
                                                                        },
                                                                        {
                                                                            xtype: 'gridcolumn',
                                                                            minWidth: 180,
                                                                            dataIndex: 'deptName',
                                                                            text: 'Dep Name'
                                                                        },
                                                                        {
                                                                            xtype: 'actioncolumn',
                                                                            text: 'Delete',
                                                                            maxWidth: 60,
                                                                            minWidth: 70,
                                                                            style: 'text-align:left;',
                                                                            width: 60,
                                                                            defaultWidth: 60,
                                                                            align: 'center',
                                                                            hideable: false,
                                                                            menuText: '',
                                                                            items: [
                                                                                {
                                                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {

                                                                                        //User Permission - User 삭제

                                                                                        Ext.MessageBox.confirm('Confirm', '삭제 하시겠습니까?', function(btn){

                                                                                            if(btn == "yes"){

                                                                                                Ext.Ajax.request({
                                                                                                    url: GLOBAL.urlPrefix + "permission/deleteuser",
                                                                                                    params : {
                                                                                                        permId : userConstants.selectRow.get("permId"),
                                                                                                        userId : record.get("userId")
                                                                                                    },
                                                                                                    disableCaching : true,
                                                                                                    waitMsg: 'Delete Permission User...',
                                                                                                    success: function(response){
                                                                                                        var msg = Ext.JSON.decode(response.responseText).msg;
                                                                                                        Ext.MessageBox.alert('알림', msg);

                                                                                                        Ext.getCmp("userPermissionGrid").getStore().reload();
                                                                                                        Ext.getCmp("permissionUsersGrid").getStore().reload();

                                                                                                    }
                                                                                                });
                                                                                            }

                                                                                        });
                                                                                    },
                                                                                    icon: 'resources/images/icons/delete.png',
                                                                                    iconCls: ''
                                                                                }
                                                                            ]
                                                                        }
                                                                    ],
                                                                    dockedItems: [
                                                                        {
                                                                            xtype: 'toolbar',
                                                                            dock: 'top',
                                                                            items: [
                                                                                {
                                                                                    xtype: 'button',
                                                                                    handler: function(button, e) {

                                                                                        var userWindow = Ext.create("widget.PermissionUserWindow");
                                                                                        userWindow.show();

                                                                                        userConstants.me.searchPopAllUser(true);

                                                                                    },
                                                                                    cls: 'auth-write',
                                                                                    text: 'Add User'
                                                                                },
                                                                                {
                                                                                    xtype: 'tbseparator'
                                                                                },
                                                                                {
                                                                                    xtype: 'textfield',
                                                                                    id: 'searchPermissionUserName',
                                                                                    itemId: 'searchPermissionUserName',
                                                                                    fieldLabel: 'Filtering',
                                                                                    labelWidth: 60,
                                                                                    enableKeyEvents: true
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            xtype: 'pagingtoolbar',
                                                                            dock: 'bottom',
                                                                            width: 360,
                                                                            displayInfo: true,
                                                                            store: 'PermissionUserStore'
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onCheckcolumnCheckChange: function(checkcolumn, rowIndex, checked, eOpts) {
        userConstants.me.changeMenuAuth(Ext.getCmp("permissionMenuTreeGrid"), "isRead", rowIndex, checked);
    },

    onCheckcolumnCheckChange1: function(checkcolumn, rowIndex, checked, eOpts) {
        userConstants.me.changeMenuAuth(Ext.getCmp("permissionMenuTreeGrid"), "isWrite", rowIndex, checked);
    }

});