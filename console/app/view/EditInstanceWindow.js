/*
 * File: app/view/EditInstanceWindow.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.EditInstanceWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.EditInstanceWindow',

    requires: [
        'Ext.form.Panel',
        'Ext.XTemplate',
        'Ext.form.FieldSet',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.File',
        'Ext.form.field.Display',
        'Ext.form.field.Hidden',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 560,
    id: 'EditInstanceWindow',
    itemId: 'EditInstanceWindow',
    width: 450,
    resizable: false,
    layout: 'border',
    title: 'Edit Instance',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    region: 'center',
                    header: false,
                    title: 'instanceNamePanel',
                    items: [
                        {
                            xtype: 'form',
                            id: 'editInstanceForm',
                            itemId: 'editInstanceForm',
                            bodyPadding: 15,
                            fieldDefaults: {
                                msgTarget: 'side',
                                labelWidth: 120
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Instance Name',
                                    labelWidth: 120,
                                    name: 'displayName',
                                    allowBlank: false,
                                    vtype: 'template'
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Host Name',
                                    labelWidth: 120,
                                    name: 'hostName',
                                    allowBlank: false,
                                    vtype: 'template'
                                },
                                {
                                    xtype: 'fieldset',
                                    margin: '18 0 0 0',
                                    collapsible: true,
                                    title: 'SSH Settings (Required)',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            afterLabelTextTpl: [
                                                '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                            ],
                                            fieldLabel: 'SSH Port',
                                            labelWidth: 130,
                                            name: 'sshPort'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            afterLabelTextTpl: [
                                                '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                            ],
                                            fieldLabel: 'Username',
                                            labelWidth: 130,
                                            name: 'sshUsername'
                                        },
                                        {
                                            xtype: 'radiogroup',
                                            id: 'chkUseGroup',
                                            itemId: 'chkUseGroup',
                                            padding: '0 0 0 135',
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'chkUseType',
                                                    boxLabel: 'Use Password',
                                                    checked: true,
                                                    inputValue: 'password',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onRadiofieldChange1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'chkUseType',
                                                    boxLabel: ' Use Key',
                                                    inputValue: 'key'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'textfield',
                                            validator: function(value) {
                                                var chkValue = Ext.getCmp('editInstanceForm').getForm().findField('chkUseType').getValue();

                                                if(chkValue == true) {
                                                    if(value) {
                                                        return true;
                                                    } else {
                                                        return 'This field is required';
                                                    }
                                                } else {
                                                    return true;
                                                }

                                            },
                                            anchor: '100%',
                                            fieldLabel: 'Password',
                                            labelWidth: 130,
                                            name: 'sshPassword',
                                            inputType: 'password'
                                        },
                                        {
                                            xtype: 'textfield',
                                            validator: function(value) {
                                                var chkValue = Ext.getCmp('editInstanceForm').getForm().findField('chkUseType').getValue();

                                                if(chkValue == true) {
                                                    if(value) {
                                                        return true;
                                                    } else {
                                                        return 'This field is required';
                                                    }
                                                } else {
                                                    return true;
                                                }

                                            },
                                            anchor: '100%',
                                            fieldLabel: 'Password Confirm',
                                            labelWidth: 130,
                                            name: 'confirmSshPassword',
                                            inputType: 'password',
                                            vtype: 'password'
                                        },
                                        {
                                            xtype: 'filefield',
                                            validator: function(value) {
                                                var chkValue = Ext.getCmp('editInstanceForm').getForm().findField('chkUseType').getValue();

                                                if(chkValue == false) {
                                                    if(value) {
                                                        return true;
                                                    } else {
                                                        return 'This field is required';
                                                    }
                                                } else {
                                                    return true;
                                                }

                                            },
                                            anchor: '100%',
                                            disabled: true,
                                            fieldLabel: 'Key File',
                                            labelWidth: 130,
                                            name: 'keyFile',
                                            emptyText: 'Select a identity file'
                                        },
                                        {
                                            xtype: 'displayfield',
                                            anchor: '100%',
                                            padding: '0 0 0 135',
                                            labelWidth: 145,
                                            name: 'sshKeyFile',
                                            value: 'Display Field'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    margin: '20 0 0 0',
                                    collapsible: true,
                                    title: 'Static IP Address Settings (Optional)',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'IP Address',
                                            labelWidth: 130,
                                            name: 'ipAddress'
                                        },
                                        {
                                            xtype: 'textfield',
                                            validator: function(value) {
                                                var chkValue = Ext.getCmp('editInstanceForm').getForm().findField('ipAddress').getValue();

                                                if(chkValue) {
                                                    if(value) {
                                                        return true;
                                                    } else {
                                                        return 'This field is required';
                                                    }
                                                } else {
                                                    return true;
                                                }

                                            },
                                            anchor: '100%',
                                            fieldLabel: 'Net Mask',
                                            labelWidth: 130,
                                            name: 'netmask'
                                        },
                                        {
                                            xtype: 'textfield',
                                            validator: function(value) {
                                                var chkValue = Ext.getCmp('editInstanceForm').getForm().findField('ipAddress').getValue();

                                                if(chkValue) {
                                                    if(value) {
                                                        return true;
                                                    } else {
                                                        return 'This field is required';
                                                    }
                                                } else {
                                                    return true;
                                                }

                                            },
                                            anchor: '100%',
                                            fieldLabel: 'Gateway',
                                            labelWidth: 130,
                                            name: 'gateway'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'Name Server',
                                            labelWidth: 130,
                                            name: 'nameServer'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'hiddenfield',
                                    anchor: '100%',
                                    fieldLabel: 'Label',
                                    name: 'machineId'
                                }
                            ]
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            ui: 'footer',
                            layout: {
                                type: 'hbox',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var instanceForm = Ext.getCmp("editInstanceForm");

                                        var machineId = instanceForm.getForm().findField("machineId").getValue();

                                        instanceForm.getForm().submit({
                                            clientValidation: true,
                                            url: GLOBAL.urlPrefix + "machine/updateMachine",
                                            params: {
                                                newStatus: 'delivered'
                                            },
                                            waitMsg: 'Saving Data...',
                                            success: function(form, action) {
                                                Ext.Msg.alert('Success', action.result.msg);

                                                Ext.getCmp('instancesGrid').getStore().load({

                                                    callback:function(records, operation, success){

                                                        Ext.each(records, function(record) {

                                                            if(record.get("machineId") == machineId) {
                                                                Ext.getCmp('instancesGrid').getSelectionModel().select(record,true,false);

                                                                instancesConstants.selectRow = record;
                                                                instancesConstants.me.selectInstanceGrid();
                                                            }
                                                        });
                                                    }

                                                });
                                                instanceForm.up('window').close();
                                            },
                                            failure: function(form, action) {

                                                switch (action.failureType) {
                                                    case Ext.form.action.Action.CLIENT_INVALID:
                                                    Ext.Msg.alert('Failure', '유효하지 않은 입력값이 존재합니다.');
                                                    break;
                                                    case Ext.form.action.Action.CONNECT_FAILURE:
                                                    Ext.Msg.alert('Failure', 'Server communication failed');
                                                    break;
                                                    case Ext.form.action.Action.SERVER_INVALID:
                                                    Ext.Msg.alert('Failure', action.result.msg);
                                                }
                                            }
                                        });

                                    },
                                    margin: '0 15 0 0',
                                    padding: '2 10 2 10',
                                    text: 'OK'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.MessageBox.confirm('Confirm', '작업을 취소하시겠습니까?', function(btn){

                                            if(btn == "yes"){
                                                button.up("window").close();
                                            }

                                        });

                                    },
                                    margin: '0 0 0 0',
                                    padding: '2 5 2 5',
                                    text: 'Cancel'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onRadiofieldChange1: function(field, newValue, oldValue, eOpts) {
        var form = field.up('form').getForm();
        if(newValue == true) {
            form.findField('keyFile').setValue('');
            form.findField('keyFile').isValid();

            form.findField('keyFile').setDisabled(true);
            form.findField('sshKeyFile').setDisabled(true);
            form.findField('sshPassword').setDisabled(false);
            form.findField('confirmSshPassword').setDisabled(false);

        } else {
            form.findField('sshPassword').setValue('');
            form.findField('confirmSshPassword').setValue('');

            form.findField('sshPassword').isValid();
            form.findField('confirmSshPassword').isValid();

            form.findField('keyFile').setDisabled(false);
            form.findField('sshPassword').setDisabled(true);
            form.findField('confirmSshPassword').setDisabled(true);
        }
    }

});