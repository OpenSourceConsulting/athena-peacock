/*
 * File: app/view/AlmUserWindow.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.AlmUserWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.AlmUserWindow',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.XTemplate',
        'Ext.form.field.Hidden',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.field.Checkbox',
        'Ext.form.CheckboxGroup'
    ],

    height: 310,
    id: 'almUserWindow',
    itemId: 'almUserWindow',
    width: 450,
    layout: 'border',
    title: 'Add User',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    region: 'center',
                    autoScroll: true,
                    header: false,
                    title: 'almUserPanel',
                    items: [
                        {
                            xtype: 'form',
                            id: 'popAlmUserForm',
                            itemId: 'popAlmUserForm',
                            width: 415,
                            bodyPadding: '15 0 15 15',
                            fieldDefaults: {
                                msgTarget: 'side',
                                labelWidth: 120
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'User ID',
                                    labelWidth: 120,
                                    msgTarget: 'under',
                                    name: 'name',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'User Name',
                                    labelWidth: 120,
                                    msgTarget: 'under',
                                    name: 'displayName',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'First Name',
                                    msgTarget: 'under',
                                    name: 'firstName',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Last Name',
                                    msgTarget: 'under',
                                    name: 'lastName',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Password',
                                    labelWidth: 120,
                                    msgTarget: 'under',
                                    name: 'password',
                                    inputType: 'password',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'Confirm Password',
                                    labelWidth: 120,
                                    msgTarget: 'under',
                                    name: 'confirmPassword',
                                    submitValue: false,
                                    inputType: 'password',
                                    allowBlank: false,
                                    vtype: 'password'
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>'
                                    ],
                                    fieldLabel: 'EMail Address',
                                    labelWidth: 120,
                                    msgTarget: 'under',
                                    name: 'email',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'hiddenfield',
                                    anchor: '100%',
                                    fieldLabel: 'Label',
                                    name: 'userId'
                                },
                                {
                                    xtype: 'hiddenfield',
                                    anchor: '100%',
                                    fieldLabel: 'Label',
                                    name: 'emailAddress'
                                }
                            ]
                        },
                        {
                            xtype: 'checkboxfield',
                            hidden: true,
                            fieldLabel: 'Is Active',
                            labelWidth: 120,
                            submitValue: false,
                            boxLabel: 'Box Label'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            padding: '',
                            fieldLabel: 'Dept Name',
                            labelWidth: 120,
                            submitValue: false
                        },
                        {
                            xtype: 'checkboxgroup',
                            hidden: true,
                            fieldLabel: 'Target',
                            labelWidth: 120,
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'checkboxfield',
                                    submitValue: false,
                                    boxLabel: 'Subvesion'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    submitValue: false,
                                    boxLabel: 'Crowd'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    submitValue: false,
                                    boxLabel: 'Jenkins'
                                }
                            ]
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            ui: 'footer',
                            layout: {
                                type: 'hbox',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {

                                        var almUserForm = Ext.getCmp("popAlmUserForm");

                                        var actionMethod = "POST";

                                        var userId = null;

                                        if(almUserForm.getForm().findField("userId").getValue().length > 0){

                                            userId = almUserForm.getForm().findField("userId").getValue();
                                            actionMethod = "PUT";

                                        }

                                        if(almUserForm.isValid()) {

                                            var sendData = almUserForm.getForm().getFieldValues();

                                            delete sendData.userId;
                                            delete sendData.emailAddress;

                                            Ext.Ajax.request({
                                                url: GLOBAL.urlPrefix + "alm/usermanagement",
                                                method: actionMethod,
                                                headers: { 'Content-Type': 'application/json' },
                                                waitMsg: 'Saving Data...',
                                                jsonData: sendData,
                                                success: function (response) {

                                                    var responseData = Ext.JSON.decode(response.responseText);

                                                    if(responseData.success) {

                                                        Ext.Msg.alert('Success', responseData.msg);

                                                        Ext.getCmp('almUserGrid').getStore().reload({
                                                            callback:function(records, operation, success){

                                                                if(userId){

                                                                    Ext.each(records, function(record) {

                                                                        if(record.get("userId") == userId) {
                                                                            Ext.getCmp('almUserGrid').getSelectionModel().select(record,true,false);

                                                                            almConstants.selectRow = record;
                                                                            almConstants.me.selectAlmUserGrid();
                                                                        }

                                                                    });
                                                                }

                                                            }
                                                        });

                                                        almUserForm.up('window').close();

                                                    } else {

                                                        Ext.Msg.alert('Failure', responseData.msg);

                                                    }
                                                },
                                                failure: function (response) {
                                                    var msg = Ext.JSON.decode(response.responseText).msg;

                                                    Ext.Msg.alert('Failure', msg);
                                                }
                                            });

                                        } else {

                                        }
                                    },
                                    margin: '0 15 0 0',
                                    padding: '2 8 2 8',
                                    text: 'Save'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.MessageBox.confirm('Confirm', '작업을 취소하시겠습니까?', function(btn){

                                            if(btn == "yes"){
                                                button.up("window").close();
                                            }

                                        });

                                    },
                                    margin: '0 0 0 0',
                                    padding: '2 5 2 5',
                                    text: 'Cancel'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});