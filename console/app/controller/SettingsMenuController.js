/*
 * File: app/controller/SettingsMenuController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.SettingsMenuController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'menuMgmtBtn',
            selector: '#menuMgmtBtn'
        },
        {
            ref: 'groupMgmtBtn',
            selector: '#groupMgmtBtn'
        },
        {
            ref: 'userMgmtBtn',
            selector: '#userMgmtBtn'
        },
        {
            ref: 'settingsDetailPanel',
            selector: '#settingsDetailPanel'
        }
    ],

    menuMgmtBtnClick: function(button, e, eOpts) {
        /**
         * Menu Management 버튼 클릭 시 수행되는 function
         */
        var menuMgmtBtn = this.getMenuMgmtBtn(),
            groupMgmtBtn = this.getGroupMgmtBtn(),
            userMgmtBtn = this.getUserMgmtBtn(),
            settingsDetailPanel = this.getSettingsDetailPanel();

        // 현재 선택된 메뉴가 Menu Management일 경우 무시한다.
        if (settingsDetailPanel.layout.getActiveItem().itemId === "menuMgmtPanel") {
            menuMgmtBtn.toggle(true);
            return;
        }

        groupMgmtBtn.toggle(false);
        userMgmtBtn.toggle(false);

        settingsDetailPanel.layout.setActiveItem(0);
    },

    groupMgmtBtnClick: function(button, e, eOpts) {
        /**
         * Group Management 버튼 클릭 시 수행되는 function
         */
        var menuMgmtBtn = this.getMenuMgmtBtn(),
            groupMgmtBtn = this.getGroupMgmtBtn(),
            userMgmtBtn = this.getUserMgmtBtn(),
            settingsDetailPanel = this.getSettingsDetailPanel();

        // 현재 선택된 메뉴가 Group Management일 경우 무시한다.
        if (settingsDetailPanel.layout.getActiveItem().itemId === "groupMgmtPanel") {
            groupMgmtBtn.toggle(true);
            return;
        }

        menuMgmtBtn.toggle(false);
        userMgmtBtn.toggle(false);

        settingsDetailPanel.layout.setActiveItem(1);
    },

    userMgmtBtnClick: function(button, e, eOpts) {
        /**
         * User Management 버튼 클릭 시 수행되는 function
         */
        var menuMgmtBtn = this.getMenuMgmtBtn(),
            groupMgmtBtn = this.getGroupMgmtBtn(),
            userMgmtBtn = this.getUserMgmtBtn(),
            settingsDetailPanel = this.getSettingsDetailPanel();

        // 현재 선택된 메뉴가 User Management일 경우 무시한다.
        if (settingsDetailPanel.layout.getActiveItem().itemId === "userMgmtPanel") {
            userMgmtBtn.toggle(true);
            return;
        }

        menuMgmtBtn.toggle(false);
        groupMgmtBtn.toggle(false);

        settingsDetailPanel.layout.setActiveItem(2);
    },

    init: function(application) {
        this.control({
            "#menuMgmtBtn": {
                click: this.menuMgmtBtnClick
            },
            "#groupMgmtBtn": {
                click: this.groupMgmtBtnClick
            },
            "#userMgmtBtn": {
                click: this.userMgmtBtnClick
            }
        });
    }

});
