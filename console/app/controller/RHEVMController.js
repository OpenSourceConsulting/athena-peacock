/*
 * File: app/controller/RHEVMController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.RHEVMController', {
    extend: 'Ext.app.Controller',

    onRhevmTabPanelTabChange: function(tabPanel, newCard, oldCard, eOpts) {
        var detailTab = Ext.getCmp("rhevmTabDetailPanel");
        detailTab.collapse();

    },

    onRhevmVMGridItemClick: function(dataview, record, item, index, e, eOpts) {
        var detailTab = Ext.getCmp("rhevmTabDetailPanel");
        detailTab.expand();
    },

    onRhevmVMGridBeforeItemContextMenu: function(dataview, record, item, index, e, eOpts) {
        var position = e.getXY();
        e.stopEvent();

        RHEVMConstants.selectRowId = record.get('id');

        RHEVMConstants.contextMenu.showAt(position);
    },

    init: function(application) {
                var rhevm = this;

                var rhevmVMGridContextMenu = new Ext.menu.Menu({
                    items:
                    [
                    { text: 'Start',
                        handler: function() {
                            alert('Start');
                        }
                    },
                    { text: 'Stop',
                        handler: function() {
                            alert('Stop');
                        }
                    },
                    { text: 'Suspend',
                        disabled : true,
                        handler: function() {
                            alert('Suspend');
                        }
                    },
                    { text: 'Shutdown',
                        handler: function() {
                            alert('Shutdown');
                        }
                    },
                    { text: 'Export',
                        handler: function() {
                            alert('Export');
                        }
                    },
                    { text: 'Make Template',
                        handler: function() {
                            var templateWindow = Ext.create("widget.regTemplateWindow");
                            templateWindow.show();

                        }
                    }
                    ]

                });

                //RHEVM Menu Constants
                Ext.define('RHEVMConstants', {
                    singleton: true,
                    contextMenu: rhevmVMGridContextMenu,
                    selectRowId : null
                });

        this.control({
            "#rhevmTabPanel": {
                tabchange: this.onRhevmTabPanelTabChange
            },
            "#rhevmVMGrid": {
                itemclick: this.onRhevmVMGridItemClick,
                beforeitemcontextmenu: this.onRhevmVMGridBeforeItemContextMenu
            }
        });
    }

});
