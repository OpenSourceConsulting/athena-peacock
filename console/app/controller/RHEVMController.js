/*
 * File: app/controller/RHEVMController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.RHEVMController', {
    extend: 'Ext.app.Controller',

    onRhevmTabPanelTabChange: function(tabPanel, newCard, oldCard, eOpts) {
        var detailTab = Ext.getCmp("rhevmTabDetailPanel");
        detailTab.collapse();
        detailTab.layout.setActiveItem(0);

    },

    onRhevmVMGridItemClick: function(rowmodel, record, index, eOpts) {
        //RHEVM VM Grid Item Click
        var detailTab = Ext.getCmp("rhevmTabDetailPanel");
        detailTab.expand();

        detailTab.layout.setActiveItem(1);

        RHEVMConstants.selectRow = record;

        Ext.getCmp("rhevmTabDetailTabPanel").setActiveTab(0);


        //General Data Loading
        var generalform = Ext.getCmp("rhevmGeneralForm");

        generalform.getForm().reset();

        generalform.getForm().waitMsgTarget = generalform.getEl();

        generalform.getForm().load({
            params : {
                name : record.get("name")
            }
            ,url : GLOBAL.urlPrefix + "/rhevm/getRhevmGeneral"
            ,waitMsg:'Loading...'
        });


        //Network Interfaces Data Loading
        var networkGrid = Ext.getCmp('rhevmNetworkGrid');

        networkGrid.getStore().load({
            params:{
                name : record.get("name")
            }
        });


        //Disk Data Loading
        var diskGrid = Ext.getCmp('rhevmDiskGrid');

        diskGrid.getStore().load({
            params:{
                name : record.get("name")
            }
        });



    },

    onRhevmVMGridBeforeItemContextMenu: function(dataview, record, item, index, e, eOpts) {
        var position = e.getXY();
        e.stopEvent();

        RHEVMConstants.selectRow = record;

        RHEVMConstants.contextMenu.showAt(position);
    },

    onRhevmsGridRender: function(component, eOpts) {
        //RHEVM Grid Data Search
        Ext.getCmp("rhevmsGrid").getStore().load();

        var detailPanel = Ext.getCmp("rhevmDetailPanel");
        detailPanel.layout.setActiveItem(0);
    },

    onRhevmsGridSelect: function(rowmodel, record, index, eOpts) {
        //RHEVM Grid Item Click

        RHEVMConstants.selectRow = record;

        var detailPanel = Ext.getCmp("rhevmDetailPanel");
        detailPanel.layout.setActiveItem(1);

        Ext.getCmp("rhevmTabPanel").setActiveTab(0);

        var detailDPanel = Ext.getCmp("rhevmTabDetailPanel");
        detailDPanel.layout.setActiveItem(0);
        detailDPanel.collapse();


        //Virtual Machines Data Loading
        var vmGrid = Ext.getCmp('rhevmVMGrid');

        vmGrid.getStore().load({
            params:{
                host : record.get("host")
            }
        });


        //Template Data Loading
        var templateGrid = Ext.getCmp('rhevmTemplateGrid');

        templateGrid.getStore().load({
            params:{
                host : record.get("host")
            }
        });

    },

    onRhevmTemplateGridSelect: function(rowmodel, record, index, eOpts) {
        //RHEVM VM Grid Item Click
        var detailTab = Ext.getCmp("rhevmTabDetailPanel");
        detailTab.expand();

        detailTab.layout.setActiveItem(1);

        RHEVMConstants.selectRow = record;

        Ext.getCmp("rhevmTabDetailTabPanel").setActiveTab(0);


        //General Data Loading
        var generalform = Ext.getCmp("rhevmGeneralForm");

        generalform.getForm().reset();

        generalform.getForm().waitMsgTarget = generalform.getEl();

        generalform.getForm().load({
            params : {
                name : record.get("name")
            }
            ,url : GLOBAL.urlPrefix + "/rhevm/getRhevmTemplateGeneral"
            ,waitMsg:'Loading...'
        });


        //Network Interfaces Data Loading
        var networkGrid = Ext.getCmp('rhevmNetworkGrid');

        networkGrid.getStore().load({
            params:{
                name : record.get("name")
            }
        });


        //Disk Data Loading
        var diskGrid = Ext.getCmp('rhevmDiskGrid');

        diskGrid.getStore().load({
            params:{
                name : record.get("name")
            }
        });



    },

    init: function(application) {
                var rhevm = this;

                var rhevmVMGridContextMenu = new Ext.menu.Menu({
                    items:
                    [
                    { text: 'Start',
                        handler: function() {
                            alert('Start');
                        }
                    },
                    { text: 'Stop',
                        handler: function() {
                            alert('Stop');
                        }
                    },
                    { text: 'Suspend',
                        disabled : true,
                        handler: function() {
                            alert('Suspend');
                        }
                    },
                    { text: 'Shutdown',
                        handler: function() {
                            alert('Shutdown');
                        }
                    },
                    { text: 'Export',
                        handler: function() {
                            alert('Export');
                        }
                    },
                    { text: 'Make Template',
                        handler: function() {
                            var templateWindow = Ext.create("widget.regTemplateWindow");
                            templateWindow.show();

                        }
                    }
                    ]

                });

                //RHEVM Menu Constants
                Ext.define('RHEVMConstants', {
                    singleton: true,
                    contextMenu: rhevmVMGridContextMenu,
                    selectRow : null
                });

        this.control({
            "#rhevmTabPanel": {
                tabchange: this.onRhevmTabPanelTabChange
            },
            "#rhevmVMGrid": {
                select: this.onRhevmVMGridItemClick,
                beforeitemcontextmenu: this.onRhevmVMGridBeforeItemContextMenu
            },
            "#rhevmsGrid": {
                afterrender: this.onRhevmsGridRender,
                select: this.onRhevmsGridSelect
            },
            "#rhevmTemplateGrid": {
                select: this.onRhevmTemplateGridSelect
            }
        });
    }

});
